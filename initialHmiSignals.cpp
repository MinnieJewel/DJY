#include "database.h"
#include  <QDateTime>
void Database::initialHmiSignals()
{
    this->hmiSetDateTime.setDate(QDate::currentDate());
    this->hmiSetDateTime.setTime(QTime::currentTime());
    HMiCT_LifeSignal_U8 = 0;
    HMiCT_HMISWVer_U8 = _HMI_VERSION_MAIN * 16 + _HMI_VERSION_MINOR;
    HM1CT_HMISWVer_U8 = 0;
    HM2CT_HMISWVer_U8 = 0;
    HM1CT_ManMot11Off_B1 = false;
    HM1CT_ManMot11OffCancel_B1 = false;
    HM1CT_ManMot12Off_B1 = false;
    HM1CT_ManMot12OffCancel_B1 = false;
    HM1CT_ManMot21Off_B1 = false;
    HM1CT_ManMot21OffCancel_B1 = false;
    HM1CT_ManMot22Off_B1 = false;
    HM1CT_ManMot22OffCancel_B1 = false;
    HM1CT_TCU1Test_B1 = false;
    HM1CT_TCU1Cancel_B1 = false;
    HM1CT_TCU2Test_B1 = false;
    HM1CT_TCU2TestCancel_B1 = false;
    HM1CT_RstTCU1_B1 = false;
    HM1CT_RstTCU2_B1 = false;
    HM1CT_OverTorque_B1 = false;
    HM1CT_OverTorqueCancel_B1 = false;
    HM1CT_CutoffLY_B1 = false;
    HM1CT_LeftTurn_B1 = false;
    HM1CT_LeftTurnCancel_B1 = false;
    HM1CT_RightTurn_B1 = false;
    HM1CT_RightTurnCancel_B1 = false;
    HM1CT_EmgFlashers_B1 = false;
    HM1CT_EmgFlashersCancel_B1 = false;
    HM1CT_SandTest_B1 = false;
    HM1CT_SandTestCancel_B1 = false;
    HM1CT_SandHeat_B1 = false;
    HM1CT_SandHeatCancel_B1 = false;
    HM1CT_SandReset_B1 = false;
    HM1CT_DeskLightTest_B1 = false;
    HM1CT_BECHHeating_B1 = false;
    HM1CT_BECHHeatingCancel_B1  = false;
    HM1CT_MaintMode_B1 = false;
    HM1CT_MaintModeCancel_B1 = false;
    HM1CT_WashMode_B1 = false;
    HM1CT_WashModeCancel_B1 = false;
    HM1CT_TrainBack_B1 = false;
    HM1CT_TrainBackCancel_B1 = false;
    HM1CT_PATestStart_B1 = false;
    HM1CT_PATestStop_B1 = false;
    HM1CT_TestAcc1_B1 = false;
    HM1CT_TestAcc2_B1 = false;
    HM1CT_TestDec_B1 = false;
    HM1CT_Buzzer_B1 = false;
    HM1CT_EDCutOff1_B1 = false;
    HM1CT_EDCutOff1Cancel_B1 = false;
    HM1CT_EDCutOff2_B1 = false;
    HM1CT_EDCutOff2Cancel_B1 = false;
    HM1CT_WheelDia1_U8 = 0;
    HM1CT_WheelDia2_U8 = 0;
    HM1CT_WheelDia3_U8 = 0;
    HM1CT_WheelDia4_U8 = 0;
    HM1CT_WheelDia5_U8 = 0;
    HM1CT_WheelDia6_U8 = 0;
    HM1CT_SAVEWheelDig1_B1 = false;
    HM1CT_SAVEWheelDig2_B1 = false;
    HM1CT_SAVEWheelDig3_B1 = false;
    HM1CT_SAVEWheelDig4_B1 = false;
    HM1CT_SAVEWheelDig5_B1 = false;
    HM1CT_SAVEWheelDig6_B1 = false;
//    HM1CT_Year_U8 = 0;
//    HM1CT_Month_U8 = 0;
//    HM1CT_Day_U8 = 0;
//    HM1CT_Hour_U8 = 0;
//    HM1CT_Minute_U8 = 0;
//    HM1CT_Second_U8 = 0;
    HM1CT_TrainNum_U16 = 0;
    HM1CT_LineNum_U16 = 0;
    HM1CT_SAVETime_B1 = false;
    HM1CT_SAVETrainNum_B1 = false;
    HM1CT_SAVELineNum_B1 = false;
    HM1CT_PageCode_U8 = 0;
    HM1CT_HVACMode_U8 = 0;
    HM1CT_SAVEHVACMode_B1 = false;
    HM1CT_HVACTemp_U8 = 0;
    HM1CT_SAVEHVACTemp_B1 = false;
    HM1CT_IDeactPreHeatCool_B1 = false;
    HM1CT_DCDCDisCharge_B1 = false;
    HM1CT_DCDCDisChargeCancel_B1 = false;
    HM1CT_DCDCMmode_B1 = false;
    HM1CT_DCDCMmodeCancel_B1 = false;
    HM1CT_DCDC1CutOff_B1 = false;
    HM1CT_DCDC1CutOffCancel_B1 = false;
    HM1CT_DCDC2CutOff_B1 = false;
    HM1CT_DCDC2CutOffCancel_B1 = false;
    HM1CT_DCDC1Reset_B1 = false;
    HM1CT_DCDC2Reset_B1 = false;
    HM1CT_SetAccTimeYear_U8 = 0;
    HM1CT_SetAccTimeMonth_U8 = 0;
    HM1CT_SetAccTimeDay_U8 = 0;
    HM1CT_SetTagAccTime_U8 = 0;
    HM1CT_SetTagAccData_U8 = 0;
    HM1CT_SetAccData_U32 = 0;
    HM1CT_StationByte6_U8 = 0;
    HM1CT_StationByte5_U8 = 0;
    HM1CT_StationByte4_U8 = 0;
    HM1CT_StationByte3_U8 = 0;
    HM1CT_StationByte2_U8 = 0;
    HM1CT_StationByte1_U8 = 0;
    HM1CT_StationSkipReq_B1 = false;
    HM1CT_MModeAStation_B1 = false;
    HM1CT_MModeLStation_B1 = false;
    HM1CT_PISorPACtrlMode_U8 = 0;
    HM1CT_EmgyBroadcastID_U8 = 0;
    HM1CT_EmgyBroadcastRepeat_U8 = 0;
    HM1CT_StartingStation_U16 = 0;
    HM1CT_EndingStation_U16 = 0;
    HM1CT_CurrentStation_U16 = 0;
    HM1CT_NextStation_U16 = 0;
    HM1CT_PathID_U8 = 0;
    HM1CT_PISorPACtrlModeReq_B1 = false;
    HM1CT_EmgyBroadcastStartCmd_B1 = false;
    HM1CT_EmgyBroadcastEndCmd_B1 = false;
    HM1CT_PathIDReq_B1 = false;
    HM1CT_StartingStationSetReq_B1 = false;
    HM1CT_EndingStationSetReq_B1 = false;
    HM1CT_CurrentStationSetReq_B1 = false;
    HM1CT_NextStationSetReq_B1 = false;
}

void Database::updateHmiSignals()
{
    if (1 == this->HMIPosition)
    {
        this->crrcMvb->setUnsignedChar(0x400, 0, this->HMiCT_LifeSignal_U8);
        this->crrcMvb->setUnsignedChar(0x400, 2, this->HMiCT_HMISWVer_U8);
        this->hmi1Version.sprintf("%d.%d", _HMI_VERSION_MAIN, _HMI_VERSION_MAIN);
        this->hmi2Version.sprintf("%d.%d", this->crrcMvb->getUnsignedChar(0x410, 2)/16, this->crrcMvb->getUnsignedChar(0x410,2)%16);
        this->crrcMvb->setBool(0x400, 4, 7, this->HM1CT_ManMot11Off_B1);
        this->crrcMvb->setBool(0x400, 4, 6, this->HM1CT_ManMot11OffCancel_B1);
        this->crrcMvb->setBool(0x400, 4, 5, this->HM1CT_ManMot12Off_B1);
        this->crrcMvb->setBool(0x400, 4, 4, this->HM1CT_ManMot12OffCancel_B1);
        this->crrcMvb->setBool(0x400, 4, 3, this->HM1CT_ManMot21Off_B1);
        this->crrcMvb->setBool(0x400, 4, 2, this->HM1CT_ManMot21OffCancel_B1);
        this->crrcMvb->setBool(0x400, 4, 1, this->HM1CT_ManMot22Off_B1);
        this->crrcMvb->setBool(0x400, 4, 0, this->HM1CT_ManMot22OffCancel_B1);
        this->crrcMvb->setBool(0x400, 5, 7, this->HM1CT_TCU1Test_B1);
        this->crrcMvb->setBool(0x400, 5, 6, this->HM1CT_TCU1Cancel_B1);
        this->crrcMvb->setBool(0x400, 5, 5, this->HM1CT_TCU2Test_B1);
        this->crrcMvb->setBool(0x400, 5, 4, this->HM1CT_TCU2TestCancel_B1);
        this->crrcMvb->setBool(0x400, 5, 3, this->HM1CT_RstTCU1_B1);
        this->crrcMvb->setBool(0x400, 5, 2, this->HM1CT_RstTCU2_B1);
        this->crrcMvb->setBool(0x400, 5, 1, this->HM1CT_OverTorque_B1);
        this->crrcMvb->setBool(0x400, 5, 0, this->HM1CT_OverTorqueCancel_B1);
        this->crrcMvb->setBool(0x400, 6, 7, this->HM1CT_CutoffLY_B1);
        this->crrcMvb->setBool(0x400, 6, 5, this->HM1CT_LeftTurn_B1);
        this->crrcMvb->setBool(0x400, 6, 4, this->HM1CT_LeftTurnCancel_B1);
        this->crrcMvb->setBool(0x400, 6, 3, this->HM1CT_RightTurn_B1);
        this->crrcMvb->setBool(0x400, 6, 2, this->HM1CT_RightTurnCancel_B1);
        this->crrcMvb->setBool(0x400, 6, 1, this->HM1CT_EmgFlashers_B1);
        this->crrcMvb->setBool(0x400, 6, 0, this->HM1CT_EmgFlashersCancel_B1);
        this->crrcMvb->setBool(0x400, 7, 7, this->HM1CT_SandTest_B1);
        this->crrcMvb->setBool(0x400, 7, 6, this->HM1CT_SandTestCancel_B1);
        this->crrcMvb->setBool(0x400, 7, 5, this->HM1CT_SandHeat_B1);
        this->crrcMvb->setBool(0x400, 7, 4, this->HM1CT_SandHeatCancel_B1);
        this->crrcMvb->setBool(0x400, 7, 3, this->HM1CT_SandReset_B1);
        this->crrcMvb->setBool(0x400, 7, 1, this->HM1CT_DeskLightTest_B1);
        this->crrcMvb->setBool(0x400, 8, 7, this->HM1CT_BECHHeating_B1);
        this->crrcMvb->setBool(0x400, 8, 6, this->HM1CT_BECHHeatingCancel_B1 );
        this->crrcMvb->setBool(0x400, 8, 5, this->HM1CT_MaintMode_B1);
        this->crrcMvb->setBool(0x400, 8, 4, this->HM1CT_MaintModeCancel_B1);
        this->crrcMvb->setBool(0x400, 8, 3, this->HM1CT_WashMode_B1);
        this->crrcMvb->setBool(0x400, 8, 2, this->HM1CT_WashModeCancel_B1);
        this->crrcMvb->setBool(0x400, 8, 1, this->HM1CT_TrainBack_B1);
        this->crrcMvb->setBool(0x400, 8, 0, this->HM1CT_TrainBackCancel_B1);
        this->crrcMvb->setBool(0x400, 9, 7, this->HM1CT_PATestStart_B1);
        this->crrcMvb->setBool(0x400, 9, 6, this->HM1CT_PATestStop_B1);
        this->crrcMvb->setBool(0x400, 10, 7, this->HM1CT_TestAcc1_B1);
        this->crrcMvb->setBool(0x400, 10, 6, this->HM1CT_TestAcc2_B1);
        this->crrcMvb->setBool(0x400, 10, 5, this->HM1CT_TestDec_B1);
        this->crrcMvb->setBool(0x400, 10, 4, this->HM1CT_Buzzer_B1);
        this->crrcMvb->setBool(0x400, 10, 3, this->HM1CT_EDCutOff1_B1);
        this->crrcMvb->setBool(0x400, 10, 2, this->HM1CT_EDCutOff1Cancel_B1);
        this->crrcMvb->setBool(0x400, 10, 1, this->HM1CT_EDCutOff2_B1);
        this->crrcMvb->setBool(0x400, 10, 0, this->HM1CT_EDCutOff2Cancel_B1);
        this->crrcMvb->setUnsignedChar(0x400, 11, this->HM1CT_WheelDia1_U8);
        this->crrcMvb->setUnsignedChar(0x400, 12, this->HM1CT_WheelDia2_U8);
        this->crrcMvb->setUnsignedChar(0x400, 13, this->HM1CT_WheelDia3_U8);
        this->crrcMvb->setUnsignedChar(0x400, 14, this->HM1CT_WheelDia4_U8);
        this->crrcMvb->setUnsignedChar(0x400, 15, this->HM1CT_WheelDia5_U8);
        this->crrcMvb->setUnsignedChar(0x400, 16, this->HM1CT_WheelDia6_U8);
        this->crrcMvb->setBool(0x400, 19, 7, this->HM1CT_SAVEWheelDig1_B1);
        this->crrcMvb->setBool(0x400, 19, 6, this->HM1CT_SAVEWheelDig2_B1);
        this->crrcMvb->setBool(0x400, 19, 5, this->HM1CT_SAVEWheelDig3_B1);
        this->crrcMvb->setBool(0x400, 19, 4, this->HM1CT_SAVEWheelDig4_B1);
        this->crrcMvb->setBool(0x400, 19, 3, this->HM1CT_SAVEWheelDig5_B1);
        this->crrcMvb->setBool(0x400, 19, 2, this->HM1CT_SAVEWheelDig6_B1);
        this->crrcMvb->setUnsignedChar(0x400, 20, this->hmiSetDateTime.toString("YY").toInt());
        this->crrcMvb->setUnsignedChar(0x400, 21, this->hmiSetDateTime.toString("MM").toInt());
        this->crrcMvb->setUnsignedChar(0x400, 22, this->hmiSetDateTime.toString("dd").toInt());
        this->crrcMvb->setUnsignedChar(0x400, 23, this->hmiSetDateTime.toString("hh").toInt());
        this->crrcMvb->setUnsignedChar(0x400, 24, this->hmiSetDateTime.toString("mm").toInt());
        this->crrcMvb->setUnsignedChar(0x400, 25, this->hmiSetDateTime.toString("ss").toInt());
        this->crrcMvb->setUnsignedInt(0x400, 26, this->HM1CT_TrainNum_U16);
        this->crrcMvb->setUnsignedInt(0x400, 28, this->HM1CT_LineNum_U16);
        this->crrcMvb->setBool(0x400, 30, 7, this->HM1CT_SAVETime_B1);
        this->crrcMvb->setBool(0x400, 30, 6, this->HM1CT_SAVETrainNum_B1);
        this->crrcMvb->setBool(0x400, 30, 5, this->HM1CT_SAVELineNum_B1);
        this->crrcMvb->setUnsignedChar(0x400, 31, this->HM1CT_PageCode_U8);
        this->crrcMvb->setUnsignedChar(0x401, 0, this->HM1CT_HVACMode_U8);
        this->crrcMvb->setBool(0x401, 8, 7, this->HM1CT_SAVEHVACMode_B1);
        this->crrcMvb->setUnsignedChar(0x401, 9, this->HM1CT_HVACTemp_U8);
        this->crrcMvb->setBool(0x401, 16, 7, this->HM1CT_SAVEHVACTemp_B1);
        this->crrcMvb->setBool(0x401, 17, 7, this->HM1CT_IDeactPreHeatCool_B1);
        this->crrcMvb->setBool(0x401, 17, 1, this->HM1CT_DCDCDisCharge_B1);
        this->crrcMvb->setBool(0x401, 17, 0, this->HM1CT_DCDCDisChargeCancel_B1);
        this->crrcMvb->setBool(0x401, 18, 7, this->HM1CT_DCDCMmode_B1);
        this->crrcMvb->setBool(0x401, 18, 6, this->HM1CT_DCDCMmodeCancel_B1);
        this->crrcMvb->setBool(0x401, 18, 5, this->HM1CT_DCDC1CutOff_B1);
        this->crrcMvb->setBool(0x401, 18, 4, this->HM1CT_DCDC1CutOffCancel_B1);
        this->crrcMvb->setBool(0x401, 18, 3, this->HM1CT_DCDC2CutOff_B1);
        this->crrcMvb->setBool(0x401, 18, 2, this->HM1CT_DCDC2CutOffCancel_B1);
        this->crrcMvb->setBool(0x401, 18, 1, this->HM1CT_DCDC1Reset_B1);
        this->crrcMvb->setBool(0x401, 18, 0, this->HM1CT_DCDC2Reset_B1);
        this->crrcMvb->setUnsignedChar(0x401, 23, this->HM1CT_SetAccTimeYear_U8);
        this->crrcMvb->setUnsignedChar(0x401, 24, this->HM1CT_SetAccTimeMonth_U8);
        this->crrcMvb->setUnsignedChar(0x401, 25, this->HM1CT_SetAccTimeDay_U8);
        this->crrcMvb->setUnsignedChar(0x401, 26, this->HM1CT_SetTagAccTime_U8);
        this->crrcMvb->setUnsignedChar(0x401, 27, this->HM1CT_SetTagAccData_U8);
        this->crrcMvb->setUnsignedInt32(0x401, 28, this->HM1CT_SetAccData_U32);
        this->crrcMvb->setUnsignedChar(0x402, 12, this->HM1CT_StationByte6_U8);
        this->crrcMvb->setUnsignedChar(0x402, 13, this->HM1CT_StationByte5_U8);
        this->crrcMvb->setUnsignedChar(0x402, 14, this->HM1CT_StationByte4_U8);
        this->crrcMvb->setUnsignedChar(0x402, 15, this->HM1CT_StationByte3_U8);
        this->crrcMvb->setUnsignedChar(0x402, 16, this->HM1CT_StationByte2_U8);
        this->crrcMvb->setUnsignedChar(0x402, 17, this->HM1CT_StationByte1_U8);
        this->crrcMvb->setBool(0x402, 18, 7, this->HM1CT_StationSkipReq_B1);
        this->crrcMvb->setBool(0x402, 18, 1, this->HM1CT_MModeAStation_B1);
        this->crrcMvb->setBool(0x402, 18, 0, this->HM1CT_MModeLStation_B1);
        this->crrcMvb->setUnsignedChar(0x402, 19, this->HM1CT_PISorPACtrlMode_U8);
        this->crrcMvb->setUnsignedChar(0x402, 20, this->HM1CT_EmgyBroadcastID_U8);
        this->crrcMvb->setUnsignedChar(0x402, 21, this->HM1CT_EmgyBroadcastRepeat_U8);
        this->crrcMvb->setUnsignedInt(0x402, 22, this->HM1CT_StartingStation_U16);
        this->crrcMvb->setUnsignedInt(0x402, 24, this->HM1CT_EndingStation_U16);
        this->crrcMvb->setUnsignedInt(0x402, 26, this->HM1CT_CurrentStation_U16);
        this->crrcMvb->setUnsignedInt(0x402, 28, this->HM1CT_NextStation_U16);
        this->crrcMvb->setUnsignedChar(0x402, 30, this->HM1CT_PathID_U8);
        this->crrcMvb->setBool(0x402, 31, 7, this->HM1CT_PISorPACtrlModeReq_B1);
        this->crrcMvb->setBool(0x402, 31, 6, this->HM1CT_EmgyBroadcastStartCmd_B1);
        this->crrcMvb->setBool(0x402, 31, 5, this->HM1CT_EmgyBroadcastEndCmd_B1);
        this->crrcMvb->setBool(0x402, 31, 4, this->HM1CT_PathIDReq_B1);
        this->crrcMvb->setBool(0x402, 31, 3, this->HM1CT_StartingStationSetReq_B1);
        this->crrcMvb->setBool(0x402, 31, 2, this->HM1CT_EndingStationSetReq_B1);
        this->crrcMvb->setBool(0x402, 31, 1, this->HM1CT_CurrentStationSetReq_B1);
        this->crrcMvb->setBool(0x402, 31, 0, this->HM1CT_NextStationSetReq_B1);
    }
    else if (2 == this->HMIPosition)
    {
        this->crrcMvb->setUnsignedChar(0x410, 0, this->HMiCT_LifeSignal_U8);
        this->crrcMvb->setUnsignedChar(0x410, 2, this->HMiCT_HMISWVer_U8);
        this->hmi1Version.sprintf("%d.%d", this->crrcMvb->getUnsignedChar(0x400, 2)/16, this->crrcMvb->getUnsignedChar(0x400,2)%16);
        this->hmi2Version.sprintf("%d.%d", _HMI_VERSION_MAIN, _HMI_VERSION_MAIN);
        this->crrcMvb->setBool(0x410, 4, 7, this->HM1CT_ManMot11Off_B1);
        this->crrcMvb->setBool(0x410, 4, 6, this->HM1CT_ManMot11OffCancel_B1);
        this->crrcMvb->setBool(0x410, 4, 5, this->HM1CT_ManMot12Off_B1);
        this->crrcMvb->setBool(0x410, 4, 4, this->HM1CT_ManMot12OffCancel_B1);
        this->crrcMvb->setBool(0x410, 4, 3, this->HM1CT_ManMot21Off_B1);
        this->crrcMvb->setBool(0x410, 4, 2, this->HM1CT_ManMot21OffCancel_B1);
        this->crrcMvb->setBool(0x410, 4, 1, this->HM1CT_ManMot22Off_B1);
        this->crrcMvb->setBool(0x410, 4, 0, this->HM1CT_ManMot22OffCancel_B1);
        this->crrcMvb->setBool(0x410, 5, 7, this->HM1CT_TCU1Test_B1);
        this->crrcMvb->setBool(0x410, 5, 6, this->HM1CT_TCU1Cancel_B1);
        this->crrcMvb->setBool(0x410, 5, 5, this->HM1CT_TCU2Test_B1);
        this->crrcMvb->setBool(0x410, 5, 4, this->HM1CT_TCU2TestCancel_B1);
        this->crrcMvb->setBool(0x410, 5, 3, this->HM1CT_RstTCU1_B1);
        this->crrcMvb->setBool(0x410, 5, 2, this->HM1CT_RstTCU2_B1);
        this->crrcMvb->setBool(0x410, 5, 1, this->HM1CT_OverTorque_B1);
        this->crrcMvb->setBool(0x410, 5, 0, this->HM1CT_OverTorqueCancel_B1);
        this->crrcMvb->setBool(0x410, 6, 7, this->HM1CT_CutoffLY_B1);
        this->crrcMvb->setBool(0x410, 6, 5, this->HM1CT_LeftTurn_B1);
        this->crrcMvb->setBool(0x410, 6, 4, this->HM1CT_LeftTurnCancel_B1);
        this->crrcMvb->setBool(0x410, 6, 3, this->HM1CT_RightTurn_B1);
        this->crrcMvb->setBool(0x410, 6, 2, this->HM1CT_RightTurnCancel_B1);
        this->crrcMvb->setBool(0x410, 6, 1, this->HM1CT_EmgFlashers_B1);
        this->crrcMvb->setBool(0x410, 6, 0, this->HM1CT_EmgFlashersCancel_B1);
        this->crrcMvb->setBool(0x410, 7, 7, this->HM1CT_SandTest_B1);
        this->crrcMvb->setBool(0x410, 7, 6, this->HM1CT_SandTestCancel_B1);
        this->crrcMvb->setBool(0x410, 7, 5, this->HM1CT_SandHeat_B1);
        this->crrcMvb->setBool(0x410, 7, 4, this->HM1CT_SandHeatCancel_B1);
        this->crrcMvb->setBool(0x410, 7, 3, this->HM1CT_SandReset_B1);
        this->crrcMvb->setBool(0x410, 7, 1, this->HM1CT_DeskLightTest_B1);
        this->crrcMvb->setBool(0x410, 8, 7, this->HM1CT_BECHHeating_B1);
        this->crrcMvb->setBool(0x410, 8, 6, this->HM1CT_BECHHeatingCancel_B1 );
        this->crrcMvb->setBool(0x410, 8, 5, this->HM1CT_MaintMode_B1);
        this->crrcMvb->setBool(0x410, 8, 4, this->HM1CT_MaintModeCancel_B1);
        this->crrcMvb->setBool(0x410, 8, 3, this->HM1CT_WashMode_B1);
        this->crrcMvb->setBool(0x410, 8, 2, this->HM1CT_WashModeCancel_B1);
        this->crrcMvb->setBool(0x410, 8, 1, this->HM1CT_TrainBack_B1);
        this->crrcMvb->setBool(0x410, 8, 0, this->HM1CT_TrainBackCancel_B1);
        this->crrcMvb->setBool(0x410, 9, 7, this->HM1CT_PATestStart_B1);
        this->crrcMvb->setBool(0x410, 9, 6, this->HM1CT_PATestStop_B1);
        this->crrcMvb->setBool(0x410, 10, 7, this->HM1CT_TestAcc1_B1);
        this->crrcMvb->setBool(0x410, 10, 6, this->HM1CT_TestAcc2_B1);
        this->crrcMvb->setBool(0x410, 10, 5, this->HM1CT_TestDec_B1);
        this->crrcMvb->setBool(0x410, 10, 4, this->HM1CT_Buzzer_B1);
        this->crrcMvb->setBool(0x410, 10, 3, this->HM1CT_EDCutOff1_B1);
        this->crrcMvb->setBool(0x410, 10, 2, this->HM1CT_EDCutOff1Cancel_B1);
        this->crrcMvb->setBool(0x410, 10, 1, this->HM1CT_EDCutOff2_B1);
        this->crrcMvb->setBool(0x410, 10, 0, this->HM1CT_EDCutOff2Cancel_B1);
        this->crrcMvb->setUnsignedChar(0x410, 11, this->HM1CT_WheelDia1_U8);
        this->crrcMvb->setUnsignedChar(0x410, 12, this->HM1CT_WheelDia2_U8);
        this->crrcMvb->setUnsignedChar(0x410, 13, this->HM1CT_WheelDia3_U8);
        this->crrcMvb->setUnsignedChar(0x410, 14, this->HM1CT_WheelDia4_U8);
        this->crrcMvb->setUnsignedChar(0x410, 15, this->HM1CT_WheelDia5_U8);
        this->crrcMvb->setUnsignedChar(0x410, 16, this->HM1CT_WheelDia6_U8);
        this->crrcMvb->setBool(0x410, 19, 7, this->HM1CT_SAVEWheelDig1_B1);
        this->crrcMvb->setBool(0x410, 19, 6, this->HM1CT_SAVEWheelDig2_B1);
        this->crrcMvb->setBool(0x410, 19, 5, this->HM1CT_SAVEWheelDig3_B1);
        this->crrcMvb->setBool(0x410, 19, 4, this->HM1CT_SAVEWheelDig4_B1);
        this->crrcMvb->setBool(0x410, 19, 3, this->HM1CT_SAVEWheelDig5_B1);
        this->crrcMvb->setBool(0x410, 19, 2, this->HM1CT_SAVEWheelDig6_B1);
        this->crrcMvb->setUnsignedChar(0x410, 20, this->hmiSetDateTime.toString("YY").toInt());
        this->crrcMvb->setUnsignedChar(0x410, 21, this->hmiSetDateTime.toString("MM").toInt());
        this->crrcMvb->setUnsignedChar(0x410, 22, this->hmiSetDateTime.toString("dd").toInt());
        this->crrcMvb->setUnsignedChar(0x410, 23, this->hmiSetDateTime.toString("hh").toInt());
        this->crrcMvb->setUnsignedChar(0x410, 24, this->hmiSetDateTime.toString("mm").toInt());
        this->crrcMvb->setUnsignedChar(0x410, 25, this->hmiSetDateTime.toString("ss").toInt());
        this->crrcMvb->setUnsignedInt(0x410, 26, this->HM1CT_TrainNum_U16);
        this->crrcMvb->setUnsignedInt(0x410, 28, this->HM1CT_LineNum_U16);
        this->crrcMvb->setBool(0x410, 30, 7, this->HM1CT_SAVETime_B1);
        this->crrcMvb->setBool(0x410, 30, 6, this->HM1CT_SAVETrainNum_B1);
        this->crrcMvb->setBool(0x410, 30, 5, this->HM1CT_SAVELineNum_B1);
        this->crrcMvb->setUnsignedChar(0x410, 31, this->HM1CT_PageCode_U8);
        this->crrcMvb->setUnsignedChar(0x411, 0, this->HM1CT_HVACMode_U8);
        this->crrcMvb->setBool(0x411, 8, 7, this->HM1CT_SAVEHVACMode_B1);
        this->crrcMvb->setUnsignedChar(0x411, 9, this->HM1CT_HVACTemp_U8);
        this->crrcMvb->setBool(0x411, 16, 7, this->HM1CT_SAVEHVACTemp_B1);
        this->crrcMvb->setBool(0x411, 17, 7, this->HM1CT_IDeactPreHeatCool_B1);
        this->crrcMvb->setBool(0x411, 17, 1, this->HM1CT_DCDCDisCharge_B1);
        this->crrcMvb->setBool(0x411, 17, 0, this->HM1CT_DCDCDisChargeCancel_B1);
        this->crrcMvb->setBool(0x411, 18, 7, this->HM1CT_DCDCMmode_B1);
        this->crrcMvb->setBool(0x411, 18, 6, this->HM1CT_DCDCMmodeCancel_B1);
        this->crrcMvb->setBool(0x411, 18, 5, this->HM1CT_DCDC1CutOff_B1);
        this->crrcMvb->setBool(0x411, 18, 4, this->HM1CT_DCDC1CutOffCancel_B1);
        this->crrcMvb->setBool(0x411, 18, 3, this->HM1CT_DCDC2CutOff_B1);
        this->crrcMvb->setBool(0x411, 18, 2, this->HM1CT_DCDC2CutOffCancel_B1);
        this->crrcMvb->setBool(0x411, 18, 1, this->HM1CT_DCDC1Reset_B1);
        this->crrcMvb->setBool(0x411, 18, 0, this->HM1CT_DCDC2Reset_B1);
        this->crrcMvb->setUnsignedChar(0x411, 23, this->HM1CT_SetAccTimeYear_U8);
        this->crrcMvb->setUnsignedChar(0x411, 24, this->HM1CT_SetAccTimeMonth_U8);
        this->crrcMvb->setUnsignedChar(0x411, 25, this->HM1CT_SetAccTimeDay_U8);
        this->crrcMvb->setUnsignedChar(0x411, 26, this->HM1CT_SetTagAccTime_U8);
        this->crrcMvb->setUnsignedChar(0x411, 27, this->HM1CT_SetTagAccData_U8);
        this->crrcMvb->setUnsignedInt32(0x411, 28, this->HM1CT_SetAccData_U32);
        this->crrcMvb->setUnsignedChar(0x412, 12, this->HM1CT_StationByte6_U8);
        this->crrcMvb->setUnsignedChar(0x412, 13, this->HM1CT_StationByte5_U8);
        this->crrcMvb->setUnsignedChar(0x412, 14, this->HM1CT_StationByte4_U8);
        this->crrcMvb->setUnsignedChar(0x412, 15, this->HM1CT_StationByte3_U8);
        this->crrcMvb->setUnsignedChar(0x412, 16, this->HM1CT_StationByte2_U8);
        this->crrcMvb->setUnsignedChar(0x412, 17, this->HM1CT_StationByte1_U8);
        this->crrcMvb->setBool(0x412, 18, 7, this->HM1CT_StationSkipReq_B1);
        this->crrcMvb->setBool(0x412, 18, 1, this->HM1CT_MModeAStation_B1);
        this->crrcMvb->setBool(0x412, 18, 0, this->HM1CT_MModeLStation_B1);
        this->crrcMvb->setUnsignedChar(0x412, 19, this->HM1CT_PISorPACtrlMode_U8);
        this->crrcMvb->setUnsignedChar(0x412, 20, this->HM1CT_EmgyBroadcastID_U8);
        this->crrcMvb->setUnsignedChar(0x412, 21, this->HM1CT_EmgyBroadcastRepeat_U8);
        this->crrcMvb->setUnsignedInt(0x412, 22, this->HM1CT_StartingStation_U16);
        this->crrcMvb->setUnsignedInt(0x412, 24, this->HM1CT_EndingStation_U16);
        this->crrcMvb->setUnsignedInt(0x412, 26, this->HM1CT_CurrentStation_U16);
        this->crrcMvb->setUnsignedInt(0x412, 28, this->HM1CT_NextStation_U16);
        this->crrcMvb->setUnsignedChar(0x412, 30, this->HM1CT_PathID_U8);
        this->crrcMvb->setBool(0x412, 31, 7, this->HM1CT_PISorPACtrlModeReq_B1);
        this->crrcMvb->setBool(0x412, 31, 6, this->HM1CT_EmgyBroadcastStartCmd_B1);
        this->crrcMvb->setBool(0x412, 31, 5, this->HM1CT_EmgyBroadcastEndCmd_B1);
        this->crrcMvb->setBool(0x412, 31, 4, this->HM1CT_PathIDReq_B1);
        this->crrcMvb->setBool(0x412, 31, 3, this->HM1CT_StartingStationSetReq_B1);
        this->crrcMvb->setBool(0x412, 31, 2, this->HM1CT_EndingStationSetReq_B1);
        this->crrcMvb->setBool(0x412, 31, 1, this->HM1CT_CurrentStationSetReq_B1);
        this->crrcMvb->setBool(0x412, 31, 0, this->HM1CT_NextStationSetReq_B1);
    }

}


