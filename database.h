#ifndef DATABASE_H
#define DATABASE_H

#include "MainGetDefaultPara.h"
#include "global.h"
#include "PixyTypes.h"
#include "PixyMvbLib.h"
#include <QList>
#include <QMap>
#include "crrcmvb.h"

class Database
{
public:
    Database();
    bool checkLifeSignal(unsigned short int lifeLignal);
    int HMIPosition;
    QString password;
    bool hmiCcuOnlineState;
    void updateDatabase(CrrcMvb* crrcMvb);
    QDateTime hmiSetDateTime;
    //CCU-ALL
    unsigned short int CTAL_CTCMSAlive_U16;
    bool CTAL_CUnitOper_B1,CTAL_CChangeModeAuthorized_B1;
    unsigned char CTAL_SysTimeYear_U8,CTAL_SysTimeMonth_U8,CTAL_SysTimeDay_U8,CTAL_SysTimeHour_U8,CTAL_SysTimeMinute_U8,CTAL_SysTimeSecond_U8;
    unsigned int CTAL_CDateTimeSec_U32;
    unsigned short int CTAL_CDateTimeTick_U16;

    //RIOM->CCU
    unsigned char RM1CT_LifeSignal_U8,RM1CT_DIOM1LifeSignal_U8,RM1CT_DIOM2LifeSignal_U8,RM1CT_AIOMLifeSignal_U8;
    //RM1CT_Version_U8,RM1CT_DIOM1Version_U8,RM1CT_DIOM2Version_U8,RM1CT_AIOMVersion_U8,

    bool RM1CT_DIOM1NoAnswer1500_B1,RM1CT_DIOM2NoAnswer1500_B1,RM1CT_AIOMNoAnswer1500_B1,RM1CT_DIOM1NoAnswer3000_B1,RM1CT_DIOM2NoAnswer3000_B1,
    RM1CT_AIOMNoAnswer3000_B1,RM1CT_LAT_B1,RM1CT_RLD_B1,RM1CT_CheckBit0_B1,RM1CT_CheckBit1_B1;
    unsigned short int RM1CT_AIMCEffort_U16,RM2CT_AILVMeasure_U16,RM2CT_AIBog1Load_U16;

    bool RM1CT_DX1DI16PbSand_B1,RM1CT_DX1DI12PbRearFogLight_B1,RM1CT_DX1DI11DdManActive_B1,RM1CT_DX1DI10DdManCtrl_B1,RM1CT_DX1DI9EBHandle_B1,
    RM1CT_DX1DI7DrsCtrIsolSw_B1,RM1CT_DX1DI6DirectPwrSplySw_B1,RM1CT_DX1DI5MushroomSB_B1,RM1CT_DX1DI1BCE1BrkAppl_B1,RM1CT_DX1DI31RaisePantoPB_B1,
    RM1CT_DX1DI30LowPantoPB_B1,RM1CT_DX1DI29PrpClean_B1,RM1CT_DX1DI28DrvSwPosSM_B1,RM1CT_DX1DI27DrvSwPosNM_B1,RM1CT_DX1DI26DrvSwPosP_B1,
    RM1CT_DX1DI25DrvSwPosN_B1,RM1CT_DX1DI24PBLightRoom1_B1,RM1CT_DX1DI23ATCCutoff_B1,RM1CT_DX1DI22McContactCBOK_B1,RM6CT_DX1DI21NoZone_B1,
    RM1CT_DX1DI19PbDoorClosing_B1,RM1CT_DX2DI16RollbackSw_B1,RM1CT_DX2DI12PBLeftOpen_B1,RM1CT_DX2DI11PbLubr_B1,RM1CT_DX2DI10SwIntermittent_B1,
    RM1CT_DX2DI9PbWasher_B1,RM1CT_DX2DI8PbDefrost_B1,RM1CT_DX2DI6PBResetUnlockHdl_B1,RM1CT_DX2DI5PBRightOpen_B1,RM1CT_DX2DI4PbForcedClosure_B1,
    RM1CT_DX2DI3PbRelease_B1,RM1CT_DX2DI2PbRgtSideSlt_B1,RM1CT_DX2DI1PbLftSideSlt_B1,RM1CT_DX2DI30PbDrvDoorOpening_B1,RM1CT_DX2DI29Zerospeedbypass_B1,
    RM1CT_DX2DI21BCE1BrkIsoCtrl_B1,RM1CT_DX2DI20BCE2BrkIsoCtrl_B1,RM1CT_DX2DI19BCE3BrkIsoCtrl_B1,RM2CT_DX1DI16CompRunning_B1,RM2CT_DX1DI15PBLightRoom2_B1,
    RM2CT_DX1DI12DCU09UnLockDoorHdl_B1,RM2CT_DX1DI11DCU10UnLockDoorHdl_B1,RM2CT_DX1DI10NoHvErr_B1,RM2CT_DX1DI9CabInServ_B1,RM2CT_DX1DI8NeutralisedCab_B1,
    RM2CT_DX1DI7RollBack_B1,RM5CT_DX1DI7BCE2SandingRequrest_B1,RM5CT_DX1DI6BCE2Sliding_B1,RM2CT_DX1DI5NoBrakeTL_B1,RM5CT_DX1DI5BCE2NoMinFlt_B1,
    RM2CT_DX1DI4RlySBMUTP1_B1,RM5CT_DX1DI4HvLinePres1_B1,RM2CT_DX1DI3ReverseTL_B1,RM5CT_DX1DI3BCE2BrkRel_B1,RM2CT_DX1DI2ForwardTL_B1,
    RM5CT_DX1DI2BCE2BrkAppl_B1,RM2CT_DX1DI1TractionTL_B1,RM5CT_DX1DI1BCE2NoMajFlt_B1,RM5CT_DX1DI32DrsLoopRelay_B1,RM2CT_DX1DI31DdManApply_B1,
    RM2CT_DX1DI30DdManRls_B1,RM2CT_DX1DI29DdManNoEmer_B1,RM2CT_DX1DI27RlySBMUTP2_B1,RM5CT_DX1DI27DrsIsolRly_B1,RM2CT_DX1DI26MSBInPlatZone_B1,
    RM2CT_DX1DI25RlyEB_B1,RM2CT_DX1DI24RlySB_B1,RM2CT_DX1DI23FloatPwrSplyOK_B1,RM5CT_DX1DI23PlatZone1_B1,RM2CT_DX1DI22McMaxBrake_B1,
    RM2CT_DX1DI21McNeutral_B1,RM2CT_DX1DI20McNoTraction_B1,RM2CT_DX1DI19McTorqHigh_B1,RM2CT_DX1DI18McTorqLow_B1,RM5CT_DX1DI17TractionRly_B1,
    RM2CT_DX2DI16BCE1BrkRel_B1,RM2CT_DX2DI15TrBrTbs_B1,RM2CT_DX2DI13ATCMaxBr_B1,RM2CT_DX2DI12VACCabVentOK_B1,RM2CT_DX2DI11CoupledCab_B1,
    RM5CT_DX2DI10CtrlLubrOn_B1,RM2CT_DX2DI9TrBrTmr_B1,RM2CT_DX2DI8VACCabOK_B1,RM5CT_DX2DI7TachoOK_B1,RM2CT_DX2DI63kmhTbs_B1,
    RM2CT_DX2DI53kmhTmr_B1,RM2CT_DX2DI40kmhTmr_B1,RM5CT_DX2DI2ApplTrBrk2_B1,RM2CT_DX2DI1ApplTrBrk1Or3_B1,RM5CT_DX2DI24BCE3BrkAppl_B1,
    RM2CT_DX2DI22BCE1RedundBrkCtrl_B1,RM2CT_DX2DI21BCE1Or3NoMajFltFc1_B1,RM2CT_DX2DI19TowPushBrkIsol_B1,RM5CT_DX2DI18BCE2BrkIsoLated_B1,RM2CT_DX2DI17BCE1Or3BrkIsoLated_B1,
    RM3CT_DX1DI16400VAFail1_B1,RM4CT_DX1DI16HvLinePres2_B1,RM3CT_DX1DI15BattChrgFail1_B1,RM3CT_DX1DI14HighVoltagePres1_B1,RM3CT_DX1DI13AC2Fail_B1,
    RM4CT_DX1DI13DCDCFire_B1,RM3CT_DX1DI12AC1Fail_B1,RM4CT_DX1DI12PantoLocked_B1,RM3CT_DX1DI11AC2OK_B1,RM4CT_DX1DI11PantoDown_B1,
    RM3CT_DX1DI10CtrlUnitFail1_B1,RM4CT_DX1DI10PantoUp_B1,RM4CT_DX1DI9NFuseBattOK_B1,RM4CT_DX1DI5AuxIsoSW_B1,RM3CT_DX1DI224VoltOK1_B1,
    RM3CT_DX1DI1ManCtrTrBrk_B1,RM4CT_DX1DI1HSCBClosed_B1,RM3CT_DX1DI29DCUxUnLockDoorHdl_B1,RM3CT_DX1DI28DCUxUnLockDoorHdl_B1,RM3CT_DX1DI23DCU03UnLockDoorHdl_B1,
    RM3CT_DX1DI22DCU04UnLockDoorHdl_B1,RM3CT_DX1DI21RoomHVAOK_B1,RM3CT_DX1DI20RoomVentil1OK_B1,RM3CT_DX1DI19DCUPowerSupply1OK_B1,RM3CT_DX1DI18MIP1PbRequest_B1,
    RM3CT_DX1DI16AC1OK_B1,RM4CT_DX1DI17PlatZone2_B1;
    unsigned char RM2CT_Master_U8;
    bool RM2CT_MasterOk0_B1,RM2CT_MasterOk1_B1;

    unsigned char RM2CT_LifeSignal_U8,RM2CT_DIOM1LifeSignal_U8,RM2CT_DIOM2LifeSignal_U8,RM2CT_AIOMLifeSignal_U8;
    //RM2CT_Version_U8,RM2CT_DIOM1Version_U8,RM2CT_DIOM2Version_U8,RM2CT_AIOMVersion_U8,

    bool RM2CT_DIOM1NoAnswer1500_B1,RM2CT_DIOM2NoAnswer1500_B1,RM2CT_AIOMNoAnswer1500_B1,RM2CT_DIOM1NoAnswer3000_B1,RM2CT_DIOM2NoAnswer3000_B1,RM2CT_AIOMNoAnswer3000_B1,
    RM2CT_LAT_B1,RM2CT_RLD_B1,RM2CT_CheckBit0_B1,RM2CT_CheckBit1_B1;
    unsigned short int RM6CT_AIMCEffort_U16,RM5CT_AILVMeasure_U16,RM5CT_AIBog1Load_U16;
    bool RM6CT_DX1DI16PbSand_B1,RM6CT_DX1DI12PbRearFogLight_B1,RM6CT_DX1DI11DdManActive_B1,RM6CT_DX1DI10DdManCtrl_B1,RM6CT_DX1DI9EBHandle_B1,RM6CT_DX1DI7DrsCtrIsolSw_B1,
    RM6CT_DX1DI6DirectPwrSplySw_B1,RM6CT_DX1DI5MushroomSB_B1,RM6CT_DX1DI31RaisePantoPB_B1,RM6CT_DX1DI30LowPantoPB_B1,RM6CT_DX1DI29PrpClean_B1,RM6CT_DX1DI28DrvSwPosSM_B1,
    RM6CT_DX1DI27DrvSwPosNM_B1,RM6CT_DX1DI26DrvSwPosP_B1,RM6CT_DX1DI25DrvSwPosN_B1,RM6CT_DX1DI24PBLightRoom1_B1,RM6CT_DX1DI23ATCCutoff_B1,RM6CT_DX1DI22McContactCBOK_B1,
    RM6CT_DX1DI19PbDoorClosing_B1,RM6CT_DX2DI16RollbackSw_B1,RM6CT_DX2DI12PBLeftOpen_B1,RM6CT_DX2DI11PbLubr_B1,RM6CT_DX2DI10SwIntermittent_B1,RM6CT_DX2DI9PbWasher_B1,
    RM6CT_DX2DI8PbDefrost_B1,RM6CT_DX2DI6PBResetUnlockHdl_B1,RM6CT_DX2DI5PBRightOpen_B1,RM6CT_DX2DI4PbForcedClosure_B1,RM6CT_DX2DI3PbRelease_B1,RM6CT_DX2DI2PbRgtSideSlt_B1,
    RM6CT_DX2DI1PbLftSideSlt_B1,RM6CT_DX2DI30PbDrvDoorOpening_B1,RM6CT_DX2DI29Zerospeedbypass_B1,RM5CT_DX1DI16CompRunning_B1,RM5CT_DX1DI15PBLightRoom2_B1,RM5CT_DX1DI12DCU09UnLockDoorHdl_B1,
    RM5CT_DX1DI11DCU10UnLockDoorHdl_B1,RM5CT_DX1DI10NoHvErr_B1,RM5CT_DX1DI9CabInServ_B1,RM5CT_DX1DI8NeutralisedCab_B1,RM5CT_DX1DI31DdManApply_B1,RM5CT_DX1DI30DdManRls_B1,
    RM5CT_DX1DI29DdManNoEmer_B1,RM5CT_DX1DI26MSBInPlatZone_B1,RM5CT_DX1DI25RlyEB_B1,RM5CT_DX1DI24RlySB_B1,RM5CT_DX1DI22McMaxBrake_B1,RM5CT_DX1DI21McNeutral_B1,
    RM5CT_DX1DI20McNoTraction_B1,RM5CT_DX1DI19McTorqHigh_B1,RM5CT_DX1DI18McTorqLow_B1,RM5CT_DX2DI16BCE1BrkRel_B1,RM5CT_DX2DI15TrBrTbs_B1,RM5CT_DX2DI13ATCMaxBr_B1,
    RM5CT_DX2DI12VACCabVentOK_B1,RM5CT_DX2DI11CoupledCab_B1,RM5CT_DX2DI9TrBrTmr_B1,RM5CT_DX2DI8VACCabOK_B1,RM5CT_DX2DI63kmhTbs_B1,RM5CT_DX2DI53kmhTmr_B1,
    RM5CT_DX2DI40kmhTmr_B1,RM5CT_DX2DI1ApplTrBrk1Or3_B1,RM5CT_DX2DI22BCE1RedundBrkCtrl_B1,RM5CT_DX2DI21BCE1Or3NoMajFltFc1_B1,RM5CT_DX2DI19TowPushBrkIsol_B1,RM5CT_DX2DI17BCE1Or3BrkIsoLated_B1,
    RM4CT_DX1DI29DCUxUnLockDoorHdl_B1,RM4CT_DX1DI28DCUxUnLockDoorHdl_B1,RM4CT_DX1DI23DCU03UnLockDoorHdl_B1,RM4CT_DX1DI22DCU04UnLockDoorHdl_B1,RM4CT_DX1DI21RoomHVAOK_B1,RM4CT_DX1DI20RoomVentil1OK_B1,
    RM4CT_DX1DI19DCUPowerSupply1OK_B1,RM4CT_DX1DI18MIP1PbRequest_B1;
    unsigned char RM5CT_Master_U8;
    bool RM5CT_MasterOk0_B1,RM5CT_MasterOk1_B1;

    unsigned char RM3CT_LifeSignal_U8,RM3CT_DIOM1LifeSignal_U8,RM3CT_DIOM2LifeSignal_U8,RM3CT_AIOMLifeSignal_U8;
    //RM3CT_Version_U8,RM3CT_DIOM1Version_U8,RM3CT_DIOM2Version_U8,RM3CT_AIOMVersion_U8

    bool RM3CT_DIOM1NoAnswer1500_B1,RM3CT_DIOM2NoAnswer1500_B1,RM3CT_AIOMNoAnswer1500_B1,RM3CT_DIOM1NoAnswer3000_B1,RM3CT_DIOM2NoAnswer3000_B1,RM3CT_AIOMNoAnswer3000_B1,
    RM3CT_LAT_B1,RM3CT_RLD_B1,RM3CT_CheckBit0_B1,RM3CT_CheckBit1_B1;

    unsigned char RM4CT_LifeSignal_U8,RM4CT_DIOM1LifeSignal_U8,RM4CT_DIOM2LifeSignal_U8,RM4CT_AIOMLifeSignal_U8;
    //RM4CT_Version_U8,RM4CT_DIOM1Version_U8,RM4CT_DIOM2Version_U8,RM4CT_AIOMVersion_U8

    bool RM4CT_DIOM1NoAnswer1500_B1,RM4CT_DIOM2NoAnswer1500_B1,RM4CT_AIOMNoAnswer1500_B1,RM4CT_DIOM1NoAnswer3000_B1,RM4CT_DIOM2NoAnswer3000_B1,RM4CT_AIOMNoAnswer3000_B1,
    RM4CT_LAT_B1,RM4CT_RLD_B1,RM4CT_CheckBit0_B1,RM4CT_CheckBit1_B1;

    unsigned char RM5CT_LifeSignal_U8,RM5CT_DIOM1LifeSignal_U8,RM5CT_DIOM2LifeSignal_U8,RM5CT_AIOMLifeSignal_U8;
    //RM5CT_Version_U8,RM5CT_DIOM1Version_U8,RM5CT_DIOM2Version_U8,RM5CT_AIOMVersion_U8

    bool RM5CT_DIOM1NoAnswer1500_B1,RM5CT_DIOM2NoAnswer1500_B1,RM5CT_AIOMNoAnswer1500_B1,RM5CT_DIOM1NoAnswer3000_B1,RM5CT_DIOM2NoAnswer3000_B1,RM5CT_AIOMNoAnswer3000_B1,
    RM5CT_LAT_B1,RM5CT_RLD_B1,RM5CT_CheckBit0_B1,RM5CT_CheckBit1_B1;

    unsigned char RM6CT_LifeSignal_U8,RM6CT_DIOM1LifeSignal_U8,RM6CT_DIOM2LifeSignal_U8,RM6CT_AIOMLifeSignal_U8;
    //RM6CT_Version_U8,RM6CT_DIOM1Version_U8,RM6CT_DIOM2Version_U8,RM6CT_AIOMVersion_U8

    bool RM6CT_DIOM1NoAnswer1500_B1,RM6CT_DIOM2NoAnswer1500_B1,RM6CT_AIOMNoAnswer1500_B1,RM6CT_DIOM1NoAnswer3000_B1,RM6CT_DIOM2NoAnswer3000_B1,RM6CT_AIOMNoAnswer3000_B1,
    RM6CT_LAT_B1,RM6CT_RLD_B1,RM6CT_CheckBit0_B1,RM6CT_CheckBit1_B1;

    //CCU->RIOM
    unsigned short int CTRM5_AXAO1AOBCE2BrkSetPointM2_U16;
    bool CTRM1_DX1DO16DDUAlarm2_B1,CTRM1_DX1DO14DoorOpenLight_B1,CTRM1_DX1DO13RqstLightOn_B1,CTRM1_DX1DO12RightOpenLight_B1,
    CTRM1_DX1DO11ForcedClosure_B1,CTRM1_DX1DO10LeftOpenLight_B1,CTRM1_DX1DO9LeftTurn_B1,CTRM1_DX1DO8CmdRearFogLight_B1,
    CTRM1_DX1DO7LeftTurnWhite_B1,CTRM1_DX1DO6RightTurnWhite_B1,CTRM1_DX1DO5HvPresLight_B1,CTRM1_DX2DO15SandLight_B1,
    CTRM1_DX2DO14CmdDefrost_B1,CTRM1_DX2DO13CmdWiper_B1,CTRM1_DX2DO12LeftTurnCam_B1,CTRM1_DX2DO11RightTurnCam_B1,
    CTRM1_DX2DO4SpeedLimitLight_B1,CTRM1_DX2DO3LowPantoLight_B1,CTRM1_DX2DO2DDePrpLight_B1,CTRM1_DX2DO1RightTurn_B1,
    CTRM2_DX1DO15DoorUnlock_B1,CTRM2_DX1DO14OverSpeed_B1,CTRM2_DX1DO13TractionAuth_B1,CTRM2_DX1DO12BCAMHeating_B1,
    CTRM5_DX1DO8LubrOn_B1,CTRM2_DX1DO7CloseHSCB_B1,CTRM5_DX1DO5AuthPanto_B1,CTRM2_DX1DO4OpenHSCB_B1,
    CTRM2_DX1DO2CompLightRoom_B1,CTRM2_DX1DO1ReducLightRoom_B1,CTRM2_DX2DO16BrkMajFltLight_B1,CTRM2_DX2DO14CabClimOnOff_B1,
    CTRM5_DX2DO13BCE2ApplTrBrk_B1,CTRM2_DX2DO8BCE1B4BrkSetPoint_B1,CTRM2_DX2DO7BCE1B3BrkSetPoint_B1,CTRM2_DX2DO6BCE1B2BrkSetPoint_B1,
    CTRM2_DX2DO5BCE1B1BrkSetPoint_B1,CTRM2_DX2DO4SandHeating_B1,CTRM2_DX2DO3DrainValve1Ctrl_B1,CTRM2_DX2DO2SAN1Sanding_B1,
    CTRM2_DX2DO1Comp1Ctrl_B1,CTRM3_DX1DO15MIPLight_B1,CTRM4_DX1DO10PantoLowering_B1,CTRM4_DX1DO9PantoRaising_B1;

    bool CTRM6_DX1DO16DDUAlarm2_B1,CTRM6_DX1DO14DoorOpenLight_B1,CTRM6_DX1DO13RqstLightOn_B1,CTRM6_DX1DO12RightOpenLight_B1,
    CTRM6_DX1DO11ForcedClosure_B1,CTRM6_DX1DO10LeftOpenLight_B1,CTRM6_DX1DO9LeftTurn_B1,CTRM6_DX1DO8CmdRearFogLight_B1,
    CTRM6_DX1DO7LeftTurnWhite_B1,CTRM6_DX1DO6RightTurnWhite_B1,CTRM6_DX1DO5HvPresLight_B1,CTRM6_DX2DO15SandLight_B1,
    CTRM6_DX2DO14CmdDefrost_B1,CTRM6_DX2DO13CmdWiper_B1,CTRM6_DX2DO12LeftTurnCam_B1,CTRM6_DX2DO11RightTurnCam_B1,
    CTRM6_DX2DO4SpeedLimitLight_B1,CTRM6_DX2DO3LowPantoLight_B1,CTRM6_DX2DO2DDePrpLight_B1,CTRM6_DX2DO1RightTurn_B1,
    CTRM5_DX1DO15DoorUnlock_B1,CTRM5_DX1DO14OverSpeed_B1,CTRM5_DX1DO13TractionAuth_B1,CTRM5_DX1DO12BCAMHeating_B1,
    CTRM5_DX1DO7CloseHSCB_B1,CTRM5_DX1DO2CompLightRoom_B1,CTRM5_DX1DO1ReducLightRoom_B1,CTRM5_DX2DO16BrkMajFltLight_B1,
    CTRM5_DX2DO14CabClimOnOff_B1,CTRM5_DX2DO8BCE1B4BrkSetPoint_B1,CTRM5_DX2DO7BCE1B3BrkSetPoint_B1,CTRM5_DX2DO6BCE1B2BrkSetPoint_B1,
    CTRM5_DX2DO5BCE1B1BrkSetPoint_B1,CTRM5_DX2DO4SandHeating_B1,CTRM5_DX2DO3DrainValve1Ctrl_B1,CTRM5_DX2DO2SAN1Sanding_B1,
    CTRM5_DX2DO1Comp1Ctrl_B1,CTRM4_DX1DO15MIPLight_B1;

    //ccu->TBCU
    bool CTTR1_CMainCBOff_B1, CTTR2_CMainCBOff_B1, CTTR1_CTractionAuth_B1, CTTR2_CTractionAuth_B1;
    //hmi1->ccu

    unsigned char HMiCT_LifeSignal_U8, HM1CT_LifeSignal_U8, HM2CT_LifeSignal_U8, HMiCT_HMISWVer_U8, HM1CT_HMISWVer_U8, HM2CT_HMISWVer_U8;
    bool HM1CT_ManMot11Off_B1,HM1CT_ManMot11OffCancel_B1,HM1CT_ManMot12Off_B1,HM1CT_ManMot12OffCancel_B1,HM1CT_ManMot21Off_B1,HM1CT_ManMot21OffCancel_B1,
    HM1CT_ManMot22Off_B1,HM1CT_ManMot22OffCancel_B1,HM1CT_TCU1Test_B1,HM1CT_TCU1Cancel_B1,HM1CT_TCU2Test_B1,HM1CT_TCU2TestCancel_B1,
    HM1CT_RstTCU1_B1,HM1CT_RstTCU2_B1,HM1CT_OverTorque_B1,HM1CT_OverTorqueCancel_B1,HM1CT_CutoffLY_B1,HM1CT_LeftTurn_B1,
    HM1CT_LeftTurnCancel_B1,HM1CT_RightTurn_B1,HM1CT_RightTurnCancel_B1,HM1CT_EmgFlashers_B1,HM1CT_EmgFlashersCancel_B1,HM1CT_SandTest_B1,
    HM1CT_SandTestCancel_B1,HM1CT_SandHeat_B1,HM1CT_SandHeatCancel_B1,HM1CT_SandReset_B1,HM1CT_DeskLightTest_B1,HM1CT_BECHHeating_B1,
    HM1CT_BECHHeatingCancel_B1 ,HM1CT_MaintMode_B1,HM1CT_MaintModeCancel_B1,HM1CT_WashMode_B1,HM1CT_WashModeCancel_B1,HM1CT_TrainBack_B1,
    HM1CT_TrainBackCancel_B1,HM1CT_PATestStart_B1,HM1CT_PATestStop_B1,HM1CT_TestAcc1_B1,HM1CT_TestAcc2_B1,HM1CT_TestDec_B1,
    HM1CT_Buzzer_B1,HM1CT_EDCutOff1_B1,HM1CT_EDCutOff1Cancel_B1,HM1CT_EDCutOff2_B1,HM1CT_EDCutOff2Cancel_B1;
    unsigned char HM1CT_WheelDia1_U8,HM1CT_WheelDia2_U8,HM1CT_WheelDia3_U8,HM1CT_WheelDia4_U8,HM1CT_WheelDia5_U8,HM1CT_WheelDia6_U8;
    bool HM1CT_SAVEWheelDig1_B1,HM1CT_SAVEWheelDig2_B1,HM1CT_SAVEWheelDig3_B1,HM1CT_SAVEWheelDig4_B1,HM1CT_SAVEWheelDig5_B1,HM1CT_SAVEWheelDig6_B1;
    //unsigned char HM1CT_Year_U8,HM1CT_Month_U8,HM1CT_Day_U8,HM1CT_Hour_U8,HM1CT_Minute_U8,HM1CT_Second_U8;
    unsigned short int HM1CT_TrainNum_U16,HM1CT_LineNum_U16;
    bool HM1CT_SAVETime_B1,HM1CT_SAVETrainNum_B1,HM1CT_SAVELineNum_B1;
    unsigned char HM1CT_PageCode_U8,HM1CT_HVACMode_U8;
    bool HM1CT_SAVEHVACMode_B1;
    unsigned char HM1CT_HVACTemp_U8;
    bool HM1CT_SAVEHVACTemp_B1,HM1CT_IDeactPreHeatCool_B1,HM1CT_DCDCDisCharge_B1,HM1CT_DCDCDisChargeCancel_B1,HM1CT_DCDCMmode_B1,HM1CT_DCDCMmodeCancel_B1,
    HM1CT_DCDC1CutOff_B1,HM1CT_DCDC1CutOffCancel_B1,HM1CT_DCDC2CutOff_B1,HM1CT_DCDC2CutOffCancel_B1,HM1CT_DCDC1Reset_B1,HM1CT_DCDC2Reset_B1;
    unsigned char HM1CT_SetAccTimeYear_U8,HM1CT_SetAccTimeMonth_U8,HM1CT_SetAccTimeDay_U8,HM1CT_SetTagAccTime_U8,HM1CT_SetTagAccData_U8;
    quint32 HM1CT_SetAccData_U32;
    unsigned char HM1CT_StationByte6_U8,HM1CT_StationByte5_U8,HM1CT_StationByte4_U8,HM1CT_StationByte3_U8,HM1CT_StationByte2_U8,HM1CT_StationByte1_U8;
    bool HM1CT_StationSkipReq_B1,HM1CT_MModeAStation_B1,HM1CT_MModeLStation_B1;
    unsigned char HM1CT_PISorPACtrlMode_U8,HM1CT_EmgyBroadcastID_U8,HM1CT_EmgyBroadcastRepeat_U8;
    unsigned short int HM1CT_StartingStation_U16,HM1CT_EndingStation_U16,HM1CT_CurrentStation_U16,HM1CT_NextStation_U16;
    unsigned char HM1CT_PathID_U8;
    bool HM1CT_PISorPACtrlModeReq_B1,HM1CT_EmgyBroadcastStartCmd_B1,HM1CT_EmgyBroadcastEndCmd_B1,HM1CT_PathIDReq_B1,HM1CT_StartingStationSetReq_B1,HM1CT_EndingStationSetReq_B1,
    HM1CT_CurrentStationSetReq_B1,HM1CT_NextStationSetReq_B1;

    //ccu->hmi
    bool CTHM_CCU1On_B1,CTHM_CCU2On_B1,CTHM_HMI1On_B1,CTHM_HMI2On_B1,CTHM_RIOM1GWOnline_B1,CTHM_RIOM1DX1Online_B1,CTHM_RIOM1DX2Online_B1,CTHM_RIOM1AXOnline_B1,
    CTHM_RIOM2GWOnline_B1,CTHM_RIOM2DX1Online_B1,CTHM_RIOM2DX2Online_B1,CTHM_RIOM2AXOnline_B1,CTHM_RIOM3GWOnline_B1,CTHM_RIOM3DX1Online_B1,CTHM_RIOM3AXOnline_B1,CTHM_RIOM4GWOnline_B1,
    CTHM_RIOM4DX1Online_B1,CTHM_RIOM4AXOnline_B1,CTHM_RIOM5GWOnline_B1,CTHM_RIOM5DX1Online_B1,CTHM_RIOM5DX2Online_B1,CTHM_RIOM5AXOnline_B1,CTHM_RIOM6GWOnline_B1,CTHM_RIOM6DX1Online_B1,
    CTHM_RIOM6DX2Online_B1,CTHM_RIOM6AXOnline_B1,CTHM_ERM1On_B1,CTHM_ERM2On_B1,CTHM_ERM1DIO1On_B1,CTHM_ERM1DIO2On_B1,CTHM_ERM1AXOn_B1,CTHM_TBCU1On_B1,
    CTHM_TBCU2On_B1,CTHM_BCUOn_B1,CTHM_ACUOn_B1,CTHM_BCCU1On_B1,CTHM_BCCU2On_B1,CTHM_PIS1On_B1,CTHM_PIS2On_B1,CTHM_MDCU1On_B1,
    CTHM_MDCU2On_B1,CTHM_MDCU3On_B1,CTHM_MDCU4On_B1,CTHM_MDCU5On_B1,CTHM_MDCU6On_B1,CTHM_MDCU7On_B1,CTHM_MDCU8On_B1,CTHM_MDCU9On_B1,
    CTHM_MDCU10On_B1,CTHM_MDCU11On_B1,CTHM_MDCU12On_B1,CTHM_HVAC1On_B1,CTHM_HVAC2On_B1,CTHM_ATC1On_B1,CTHM_ATCComm_B1,CTHM_CCU1Active_B1,
    CTHM_CCU2Active_B1,CTHM_PIS1Active_B1,CTHM_PIS2Active_B1,CTHM_RIOMCAN1Active_B1,CTHM_RIOMCAN2Active_B1,CTHM_ATCOK_B1;
    unsigned char CTHM_DCDC1Sta_U8,CTHM_DCDC2Sta_U8,CTHM_HCM1State_U8,CTHM_BCU2State_U8,CTHM_HCM3State_U8,CTHM_ACEState_U8,CTHM_TBCU1State_U8,CTHM_TBCU2State_U8,
    CTHM_PantoState_U8,CTHM_HSCBState_U8;
    bool CTHM_M1Active_B1,CTHM_M2Active_B1,CTHM_Traction_B1,CTHM_Brake_B1,CTHM_FastBrake_B1,CTHM_EmgyBrake_B1,CTHM_Backward_B1,
    CTHM_Forward_B1,CTHM_BuzzerON_B1,CTHM_BuzzerOFF_B1,CTHM_DeadmanOper_B1,CTHM_SBState_B1,CTHM_EBState_B1,CTHM_TrackBrakeOn_B1;
    unsigned char CTHM_BrakeMode_U8,CTHM_Mode_U8,CTHM_TrainNumber_U8,CTHM_Grade_U8;
    unsigned short int CTHM_TrainSpeed_U16,CTHM_Voltage_U16,CTHM_BattVolt_U16;
    signed short int CTHM_ElecEffortValue_I16,CTHM_HvValue_I16;
    unsigned char CTHM_BattTemp_U8,CTHM_DCDCEnergy_U8,CTHM_SpeedMax_U8,CTHM_SandLeftFor_U8,CTHM_SandLeftRev_U8,CTHM_AcTestStatus_U8;
    signed char CTHM_AcTestA_I8,CTHM_AcTestLevel_I8;
    unsigned char CTHM_AcTestV0_U8,CTHM_AcTestVt_U8,CTHM_AcTestSH_U8,CTHM_AcTestSL_U8;
    bool CTHM_EDCU3kmhTbs_B1,CTHM_EDCU3kmhTmr_B1,CTHM_EDCUNotCloseall_B1,CTHM_EDCUForcedClosure_B1,CTHM_EDCULSel_B1,CTHM_EDCUMIPREQ_B1,CTHM_DCDCNOHV_B1,CTHM_EDCURSel_B1,
    CTHM_DoorEmerRel_B1,CTHM_TrainPrep_B1,CTHM_CleanMode_B1,CTHM_WashModeCond_B1,CTHM_WashMode_B1,CTHM_PrepDelay_B1,CTHM_HoldingBr_B1,CTHM_SpeedLimMode_B1,
    CTHM_Coupled_B1,CTHM_BrkIsoRescued_B1,CTHM_MSBState_B1,CTHM_MModePanto1_B1,CTHM_MModePanto2_B1,CTHM_TrainBackSta_B1,CTHM_EventsPop_B1,CTHM_RPTInProgressM1_B1,
    CTHM_RPTInProgressM2_B1;
    unsigned char CTHM_LifesignPIS1_U8,CTHM_LifesignPIS2_U8,CTHM_RadioSta_U8,CTHM_NextStaOpenDoorSide_U8;
    unsigned short int CTHM_EndStationID_U16,CTHM_NowStationID_U16,CTHM_PathID_U16,CTHM_NextStationID_U16;
    unsigned char CTHM_Direction_U8,CTHM_PASta_U8;
    bool CTHM_CCSta_B1,CTHM_CPSta_B1,CTHM_PECUAlarm11_B1,CTHM_PECUAlarm21_B1,CTHM_PECUAlarm22_B1,CTHM_PECUAlarm41_B1,CTHM_PECUAlarm42_B1,CTHM_PECUAlarm51_B1;
    unsigned char CTHM_PECUActiveCarNum_U8,CTHM_PECUActiveIndex_U8,CTHM_PISMaster_U8;
    unsigned short int CTHM_IDevIsAlive_U16;
    bool CTHM_IDevOper_B1,CTHM_IAutoTestInProg_B1,CTHM_IAutoTestDone_B1,CTHM_IAutoTestRes_B1,CTHM_ICriticalFltPres_B1,CTHM_IMajorFltPres_B1,CTHM_IMinorFltPres_B1,CTHM_IInformFltPres_B1,
    CTHM_IEqpIsReady_B1,CTHM_ITrainLineIncoh_B1;
    unsigned short int CTHM_ISerialNumber_U16;
    unsigned char CTHM_IAutoTestStep_U8;
    bool CTHM_IMajorFault_B1,CTHM_IMinorFault_B1,CTHM_IBrakeApplied_B1,CTHM_IBrakeReleased_B1,CTHM_ISafeBrkPressureKO_B1,CTHM_IEmerBrkPressureKO_B1,CTHM_IMOSOutput_B1,CTHM_IPumpDutyCycle_B1,
    CTHM_IPG0SensorKO_B1,CTHM_IPG1SensorKO_B1,CTHM_ICurrentToPCValveKO_B1,CTHM_ISS1Failure_B1,CTHM_ISS2Failure_B1,CTHM_ISS3Failure_B1,CTHM_ISS4Failure_B1,CTHM_IEtherBoardProgKO_B1,
    CTHM_IMJFSignalKO_B1,CTHM_ICalliperOverPressure_B1,CTHM_IBASignalKO_B1,CTHM_IBRSignalKO_B1,CTHM_IPG1PresToPCCurKO_B1,CTHM_IIsolationFailure_B1,CTHM_ISpeedMajorFailure_B1,CTHM_IBDCSignalKO_B1;
    unsigned char CTHM_IBrkCalliperPressure_U8;
    //CTHM_ACESWVer1_U8,CTHM_ACESWVer2_U8;
    unsigned short int CTHM_SoftVer_U16;
    unsigned char CTHM_BCUSWVer0_U8,CTHM_BCUSWVer1_U8,CTHM_BCUSWVer2_U8;
    //CTHM_EDCU1SWH_U8,CTHM_EDCU1SWL_U8,CTHM_EDCU2SWH_U8,CTHM_EDCU2SWL_U8,CTHM_EDCU3SWH_U8,
    //CTHM_EDCU3SWL_U8,CTHM_EDCU4SWH_U8,CTHM_EDCU4SWL_U8,CTHM_EDCU5SWH_U8,CTHM_EDCU5SWL_U8,CTHM_EDCU6SWH_U8,CTHM_EDCU6SWL_U8,CTHM_EDCU7SWH_U8,
    //CTHM_EDCU7SWL_U8,CTHM_EDCU8SWH_U8,CTHM_EDCU8SWL_U8,CTHM_EDCU9SWH_U8,CTHM_EDCU9SWL_U8,CTHM_EDCU10SWH_U8,CTHM_EDCU10SWL_U8,CTHM_EDCU11SWH_U8,
    //CTHM_EDCU11SWL_U8,CTHM_EDCU12SWH_U8,CTHM_EDCU12SWL_U8;
    //CTHM_CCU1SWVer_U8,CTHM_CCU1MVBVer_U8,CTHM_CCU1SDBVer_U8,CTHM_CCU1VxWorksVer_U8,CTHM_CCU2SWVer_U8,
    //CTHM_CCU2MVBVer_U8,CTHM_CCU2SDBVer_U8,CTHM_CCU2VxWorksVer_U8;
    bool CTHM_CCU1VerOK_B1,CTHM_CCU2VerOK_B1,CTHM_VerOK_B1;
    unsigned char CTHM_CCU1DevIPa_U8,CTHM_CCU1DevIPb_U8,CTHM_CCU1DevIPc_U8,CTHM_CCU1DevIPd_U8,CTHM_CCU2DevIPa_U8,CTHM_CCU2DevIPb_U8,CTHM_CCU2DevIPc_U8,CTHM_CCU2DevIPd_U8,
    CTHM_CCUVerision_U8,CTHM_WheelDig1FedBk_U8,CTHM_WheelDig2FedBk_U8,CTHM_WheelDig3FedBk_U8,CTHM_WheelDig4FedBk_U8,CTHM_WheelDig5FedBk_U8,CTHM_WheelDig6FedBk_U8;
    bool CTHM_SAVEWD1FedBk_B1,CTHM_SAVEWD2FedBk_B1,CTHM_SAVEWD3FedBk_B1,CTHM_SAVEWD4FedBk_B1,CTHM_SAVEWD5FedBk_B1,CTHM_SAVEWD6FedBk_B1,CTHM_SAVETimeFedBk_B1,CTHM_SAVETrainNumFedBk_B1;
    unsigned short int CTHM_Dr1StatusWord_B16,CTHM_Dr2StatusWord_B16,CTHM_Dr3StatusWord_B16,CTHM_Dr4StatusWord_B16,CTHM_Dr5StatusWord_B16,CTHM_Dr6StatusWord_B16,CTHM_Dr7StatusWord_B16,CTHM_Dr8StatusWord_B16,
    CTHM_Dr9StatusWord_B16,CTHM_Dr10StatusWord_B16,CTHM_Dr11StatusWord_B16,CTHM_Dr12StatusWord_B16,CTHM_Dr1FaultWord_B16,CTHM_Dr2FaultWord_B16,CTHM_Dr3FaultWord_B16,CTHM_Dr4FaultWord_B16,
    CTHM_Dr5FaultWord_B16,CTHM_Dr6FaultWord_B16,CTHM_Dr7FaultWord_B16,CTHM_Dr8FaultWord_B16,CTHM_Dr9FaultWord_B16,CTHM_Dr10FaultWord_B16,CTHM_Dr11FaultWord_B16,CTHM_Dr12FaultWord_B16,
    CTHM_ACUFaultWord1_B16,CTHM_ACUFaultWord2_B16,CTHM_ACUFaultWord3_B16,CTHM_ACUFaultWord4_B16,CTHM_HVAC1FaultWord1_B16,CTHM_HVAC1FaultWord2_B16,CTHM_HVAC2FaultWord1_B16,
    CTHM_HVAC2FaultWord2_B16,CTHM_PISFaultWord1_B16,CTHM_PISFaultWord2_B16,CTHM_PISFaultWord3_B16,CTHM_PISFaultWord4_B16,CTHM_BCUFaultWord1_B16,CTHM_BCUFaultWord2_B16,CTHM_BCUFaultWord3_B16,
    CTHM_BCUFaultWord4_B16;

    bool CTHM_HMIReqFedBk01_B1,CTHM_HMIReqFedBk02_B1,CTHM_HMIReqFedBk03_B1,CTHM_HMIReqFedBk04_B1,CTHM_HMIReqFedBk05_B1,CTHM_HMIReqFedBk06_B1,
    CTHM_HMIReqFedBk07_B1,CTHM_HMIReqFedBk08_B1,CTHM_HMIReqFedBk09_B1,CTHM_HMIReqFedBk10_B1,CTHM_HMIReqFedBk11_B1,CTHM_HMIReqFedBk12_B1,
    CTHM_HMIReqFedBk13_B1,CTHM_HMIReqFedBk14_B1,CTHM_HMIReqFedBk15_B1,CTHM_HMIReqFedBk16_B1,CTHM_HMIReqFedBk17_B1,CTHM_HMIReqFedBk18_B1,
    CTHM_HMIReqFedBk19_B1,CTHM_HMIReqFedBk20_B1,CTHM_HMIReqFedBk21_B1,CTHM_HMIReqFedBk22_B1,CTHM_HMIReqFedBk23_B1,CTHM_HMIReqFedBk24_B1;

    //add in version 2.9 20200417
    bool CTHM_ModeDegrade_B1,CTHM_ModeDegradeC1_B1,CTHM_ModeDegradeC2_B1,CTHM_ModeDegradeC3_B1,CTHM_ModeBack_B1,CTHM_ModeCM_B1,
    CTHM_ModeAllEBCut_B1,CTHM_ModeDirectPower_B1,CTHM_ModeBackup_B1,CTHM_ModeTMM_B1;


    //ccu->hmi edcu
    bool DR1CT_IIsolateR1_B1,DR1CT_IEmergencyUnlockR1_B1,DR1CT_IOpnedwellR1_B1,DR1CT_IClosedwellR1_B1,DR1CT_IHardwireOpenR1_B1,DR1CT_IPassengerR1_B1,
    DR1CT_IHardwireAllCloseR1_B1,DR1CT_IZeroSpeedR1_B1,DR1CT_IObstructeOpeningR1_B1,DR1CT_INotClosedwellR1_B1,DR1CT_IDoorEnableR1_B1,DR1CT_ISafeLoop2putR1_B1,
    DR1CT_ISafeLoop1putR1_B1,DR1CT_IMaintenancePushbuttonR1_B1,DR1CT_IObstructeCloingR1_B1,DR2CT_IIsolateR1_B1,DR2CT_IEmergencyUnlockR1_B1,DR2CT_IOpnedwellR1_B1,
    DR2CT_IClosedwellR1_B1,DR2CT_IHardwireOpenR1_B1,DR2CT_IPassengerR1_B1,DR2CT_IHardwireAllCloseR1_B1,DR2CT_IZeroSpeedR1_B1,DR2CT_IObstructeOpeningR1_B1,
    DR2CT_INotClosedwellR1_B1,DR2CT_IDoorEnableR1_B1,DR2CT_ISafeLoop2putR1_B1,DR2CT_ISafeLoop1putR1_B1,DR2CT_IMaintenancePushbuttonR1_B1,DR2CT_IObstructeCloingR1_B1,
    DR3CT_IIsolateR1_B1,DR3CT_IEmergencyUnlockR1_B1,DR3CT_IOpnedwellR1_B1,DR3CT_IClosedwellR1_B1,DR3CT_IHardwireOpenR1_B1,DR3CT_IPassengerR1_B1,
    DR3CT_IHardwireAllCloseR1_B1,DR3CT_IZeroSpeedR1_B1,DR3CT_IObstructeOpeningR1_B1,DR3CT_INotClosedwellR1_B1,DR3CT_IDoorEnableR1_B1,DR3CT_ISafeLoop2putR1_B1,
    DR3CT_ISafeLoop1putR1_B1,DR3CT_IMaintenancePushbuttonR1_B1,DR3CT_IObstructeCloingR1_B1,DR4CT_IIsolateR1_B1,DR4CT_IEmergencyUnlockR1_B1,DR4CT_IOpnedwellR1_B1,
    DR4CT_IClosedwellR1_B1,DR4CT_IHardwireOpenR1_B1,DR4CT_IPassengerR1_B1,DR4CT_IHardwireAllCloseR1_B1,DR4CT_IZeroSpeedR1_B1,DR4CT_IObstructeOpeningR1_B1,
    DR4CT_INotClosedwellR1_B1,DR4CT_IDoorEnableR1_B1,DR4CT_ISafeLoop2putR1_B1,DR4CT_ISafeLoop1putR1_B1,DR4CT_IMaintenancePushbuttonR1_B1,DR4CT_IObstructeCloingR1_B1,
    DR5CT_IIsolateR1_B1,DR5CT_IEmergencyUnlockR1_B1,DR5CT_IOpnedwellR1_B1,DR5CT_IClosedwellR1_B1,DR5CT_IHardwireOpenR1_B1,DR5CT_IPassengerR1_B1,
    DR5CT_IHardwireAllCloseR1_B1,DR5CT_IZeroSpeedR1_B1,DR5CT_IObstructeOpeningR1_B1,DR5CT_INotClosedwellR1_B1,DR5CT_IDoorEnableR1_B1,DR5CT_ISafeLoop2putR1_B1,
    DR5CT_ISafeLoop1putR1_B1,DR5CT_IMaintenancePushbuttonR1_B1,DR5CT_IObstructeCloingR1_B1,DR6CT_IIsolateR1_B1,DR6CT_IEmergencyUnlockR1_B1,DR6CT_IOpnedwellR1_B1,
    DR6CT_IClosedwellR1_B1,DR6CT_IHardwireOpenR1_B1,DR6CT_IPassengerR1_B1,DR6CT_IHardwireAllCloseR1_B1,DR6CT_IZeroSpeedR1_B1,DR6CT_IObstructeOpeningR1_B1,
    DR6CT_INotClosedwellR1_B1,DR6CT_IDoorEnableR1_B1,DR6CT_ISafeLoop2putR1_B1,DR6CT_ISafeLoop1putR1_B1,DR6CT_IMaintenancePushbuttonR1_B1,DR6CT_IObstructeCloingR1_B1,
    DR7CT_IIsolateR1_B1,DR7CT_IEmergencyUnlockR1_B1,DR7CT_IOpnedwellR1_B1,DR7CT_IClosedwellR1_B1,DR7CT_IHardwireOpenR1_B1,DR7CT_IPassengerR1_B1,
    DR7CT_IHardwireAllCloseR1_B1,DR7CT_IZeroSpeedR1_B1,DR7CT_IObstructeOpeningR1_B1,DR7CT_INotClosedwellR1_B1,DR7CT_IDoorEnableR1_B1,DR7CT_ISafeLoop2putR1_B1,
    DR7CT_ISafeLoop1putR1_B1,DR7CT_IMaintenancePushbuttonR1_B1,DR7CT_IObstructeCloingR1_B1,DR8CT_IIsolateR1_B1,DR8CT_IEmergencyUnlockR1_B1,DR8CT_IOpnedwellR1_B1,
    DR8CT_IClosedwellR1_B1,DR8CT_IHardwireOpenR1_B1,DR8CT_IPassengerR1_B1,DR8CT_IHardwireAllCloseR1_B1,DR8CT_IZeroSpeedR1_B1,DR8CT_IObstructeOpeningR1_B1,
    DR8CT_INotClosedwellR1_B1,DR8CT_IDoorEnableR1_B1,DR8CT_ISafeLoop2putR1_B1,DR8CT_ISafeLoop1putR1_B1,DR8CT_IMaintenancePushbuttonR1_B1,DR8CT_IObstructeCloingR1_B1,
    DR9CT_IIsolateR1_B1,DR9CT_IEmergencyUnlockR1_B1,DR9CT_IOpnedwellR1_B1,DR9CT_IClosedwellR1_B1,DR9CT_IHardwireOpenR1_B1,DR9CT_IPassengerR1_B1,
    DR9CT_IHardwireAllCloseR1_B1,DR9CT_IZeroSpeedR1_B1,DR9CT_IObstructeOpeningR1_B1,DR9CT_INotClosedwellR1_B1,DR9CT_IDoorEnableR1_B1,DR9CT_ISafeLoop2putR1_B1,
    DR9CT_ISafeLoop1putR1_B1,DR9CT_IMaintenancePushbuttonR1_B1,DR9CT_IObstructeCloingR1_B1,DR10CT_IIsolateR1_B1,DR10CT_IEmergencyUnlockR1_B1,DR10CT_IOpnedwellR1_B1,
    DR10CT_IClosedwellR1_B1,DR10CT_IHardwireOpenR1_B1,DR10CT_IPassengerR1_B1,DR10CT_IHardwireAllCloseR1_B1,DR10CT_IZeroSpeedR1_B1,DR10CT_IObstructeOpeningR1_B1,
    DR10CT_INotClosedwellR1_B1,DR10CT_IDoorEnableR1_B1,DR10CT_ISafeLoop2putR1_B1,DR10CT_ISafeLoop1putR1_B1,DR10CT_IMaintenancePushbuttonR1_B1,DR10CT_IObstructeCloingR1_B1,
    DR11CT_IIsolateR1_B1,DR11CT_IEmergencyUnlockR1_B1,DR11CT_IOpnedwellR1_B1,DR11CT_IClosedwellR1_B1,DR11CT_IHardwireOpenR1_B1,DR11CT_IPassengerR1_B1,
    DR11CT_IHardwireAllCloseR1_B1,DR11CT_IZeroSpeedR1_B1,DR11CT_IObstructeOpeningR1_B1,DR11CT_INotClosedwellR1_B1,DR11CT_IDoorEnableR1_B1,DR11CT_ISafeLoop2putR1_B1,
    DR11CT_ISafeLoop1putR1_B1,DR11CT_IMaintenancePushbuttonR1_B1,DR11CT_IObstructeCloingR1_B1,DR12CT_IIsolateR1_B1,DR12CT_IEmergencyUnlockR1_B1,DR12CT_IOpnedwellR1_B1,
    DR12CT_IClosedwellR1_B1,DR12CT_IHardwireOpenR1_B1,DR12CT_IPassengerR1_B1,DR12CT_IHardwireAllCloseR1_B1,DR12CT_IZeroSpeedR1_B1,DR12CT_IObstructeOpeningR1_B1,
    DR12CT_INotClosedwellR1_B1,DR12CT_IDoorEnableR1_B1,DR12CT_ISafeLoop2putR1_B1,DR12CT_ISafeLoop1putR1_B1,DR12CT_IMaintenancePushbuttonR1_B1,DR12CT_IObstructeCloingR1_B1;

    //CCU->ACU
    //unsigned char CTAX_CTCMSAlive_U8;
    bool CTAX_CLPTestRequest_B1, CTAX_CFCRequest1_B1, CTAX_CFCRequest2_B1, CTAX_CLVProdInhibition_B1, CTAX_CFFProdInhibition_B1,
    CTAX_CFVProdInhibition_B1, CTAX_CACEWait_B1,CTAX_CAutComAC1toAc2_B1, CTAX_CAutComAC2toAc1_B1;

    //CCU->ERM
    unsigned short int CTDT_ERMDORefWord_U16 ,CTDT_ERMAO1Ref_U16, CTDT_ERMAO2Ref_U16;
    unsigned char CTDT_AXCTIDevIsAlive_U8;
    bool CTDT_AXCTILVPS2Run_B1,CTDT_AXCTILVPS1Run_B1,CTDT_AXCTIINV2Run_B1,CTDT_AXCTIINV1Run_B1,CTDT_AXCTILP1SelfTestOK_B1,CTDT_AXCTILP1SelfTestRun_B1;
    unsigned char CTDT_AXCTIINV2Frq_U8,CTDT_AXCTIBattTemp_U8,CTDT_AXCTILVPSOutVolt_U8,CTDT_AXCTILVPSOutCurr_U8,CTDT_AXCTIInpVolt_U8,CTDT_AXCTIINV1OutVolt_U8,CTDT_AXCTIINV1OutCurr_U8,CTDT_AXCTIINV2OutVolt_U8,
    CTDT_AXCTIINV2OutCurr_U8,CTDT_AXCTIBatOutCurr_U8,CTDT_AXCTIConsEnergyLSB_U8,CTDT_AXCTIConsEnergyMSB_U8,CTDT_AXCTIACEManId_U8;
    bool CTDT_AC1CTICompressor2sta_B1,CTDT_AC1CTICompressor1sta_B1,CTDT_AC1CTIVentilate1Sta_B1,CTDT_AC1CTICondenser1Status_B1,CTDT_AC1CTIHeater2Status_B1,CTDT_AC1CTIHeater1Status_B1;
    unsigned char CTDT_AC1CTIReturnTemp_U8,CTDT_AC1CTITargetTemp_U8,CTDT_AC1CTIDevIsAlive_U8;
    bool CTDT_AC1CTIDevActive_B1,CTDT_AC1CTIAutoHeatMode_B1,CTDT_AC1CTIManualHeatMode_B1,CTDT_AC1CTIAutoCoolMode_B1,CTDT_AC1CTIManualCoolMode_B1,CTDT_AC1CTIVentilateMode_B1,
    CTDT_AC1CTIFreqReq1_B1,CTDT_AC1CTIFreqReq0_B1,CTDT_AC1CTIPreCoolHeatMode_B1,CTDT_AC1CTIHalfLoad_B1,CTDT_AC1CTIRdcLoad3_B1,CTDT_AC1CTIRdcLoad2_B1,
    CTDT_AC1CTIRdcLoad1_B1,CTDT_AC1CTIErrLight_B1,CTDT_AC1CTIErrMedium_B1,CTDT_AC1CTIErrCritical_B1;
    unsigned char CTDT_AC1CTIFreshTemp_U8;
    bool CTDT_AC2CTICompressor2sta_B1,CTDT_AC2CTICompressor1sta_B1,CTDT_AC2CTIVentilate1Sta_B1,CTDT_AC2CTICondenser1Status_B1,CTDT_AC2CTIHeater2Status_B1,CTDT_AC2CTIHeater1Status_B1;
    unsigned char CTDT_AC2CTIReturnTemp_U8,CTDT_AC2CTITargetTemp_U8,CTDT_AC2CTIDevIsAlive_U8;
    bool CTDT_AC2CTIDevActive_B1,CTDT_AC2CTIAutoHeatMode_B1,CTDT_AC2CTIManualHeatMode_B1,CTDT_AC2CTIAutoCoolMode_B1,CTDT_AC2CTIManualCoolMode_B1,CTDT_AC2CTIVentilateMode_B1,
    CTDT_AC2CTIFreqReq1_B1,CTDT_AC2CTIFreqReq0_B1,CTDT_AC2CTIPreCoolHeatMode_B1,CTDT_AC2CTIHalfLoad_B1,CTDT_AC2CTIRdcLoad3_B1,CTDT_AC2CTIRdcLoad2_B1,
    CTDT_AC2CTIRdcLoad1_B1,CTDT_AC2CTIErrLight_B1,CTDT_AC2CTIErrMedium_B1,CTDT_AC2CTIErrCritical_B1;
    unsigned char CTDT_AC2CTIFreshTemp_U8;
    unsigned short int CTDT_C16VehIdent_U16;
    signed short int CTDT_C16Speed_I16;
    bool CTDT_C1SpeedOK_B1,CTDT_C1LeftDoorOpen_B1,CTDT_C1RightDoorOpen_B1,CTDT_C1LeftDoorClose_B1,CTDT_C1RightDoorClose_B1,CTDT_C1TrainBack_B1,
    CTDT_C1EmerStop_B1,CTDT_C1CoupledTrain1_B1,CTDT_C1PATESTSTART_B1,CTDT_C1PATESTSTOP_B1,CTDT_C1CoupledTrain5_B1,CTDT_C1VCUMASTER_B1,
    CTDT_C1EmerStart_B1,CTDT_C1StationSkipReq_B1;
    unsigned char CTDT_C8Key_U8;
    bool CTDT_C1Door1Unlock_B1,CTDT_C1Door2Unlock_B1,CTDT_C1Door3Unlock_B1,CTDT_C1Door4Unlock_B1,CTDT_C1Door5Unlock_B1,CTDT_C1Door6Unlock_B1,
    CTDT_C1Door7Unlock_B1,CTDT_C1Door8Unlock_B1,CTDT_C1Door9Unlock_B1,CTDT_C1Door10Unlock_B1,CTDT_C1Door11Unlock_B1,CTDT_C1Door12Unlock_B1,
    CTDT_C1HalfModeSetValid_B1,CTDT_C1HandModeSetValid_B1,CTDT_C1AtoModeSetValid_B1,CTDT_C1backoff_B1;
    unsigned char CTDT_C8FireAlarm1_U8,CTDT_C8FireAlarm2_U8,CTDT_C8FireAlarm3_U8,CTDT_C8FireAlarm4_U8;
    unsigned short int CTDT_C16StartStationIDHalf_U16,CTDT_C16EndStationIDHalf_U16,CTDT_C16NextStationIDHalf_U16,CTDT_C16PathID_U16;
    unsigned char CTDT_C8EntLeav_U8,CTDT_C8EmerItem_U8,CTDT_C8EmerCnt_U8;

    //ERM->CCU
     unsigned char DT1CT_ERMLfSignal_U8;
     //DT1CT_ERMSWVer_U8;
     bool DT1CT_ERMSWVerValid_B1;
     unsigned char DT1CT_ERMDIO1LfSignal_U8,DT1CT_ERMDIO2LfSignal_U8,DT1CT_ERMAXLfSignal_U8,DT1CT_ERMDevIPa_U8,DT1CT_ERMDevIPb_U8,DT1CT_ERMDevIPc_U8,
     DT1CT_ERMDevIPd_U8;
     bool DT1CT_ERMDI01_B1,DT1CT_ERMDI02_B1,DT1CT_ERMDI03_B1,DT1CT_ERMDI04_B1,DT1CT_ERMDI05_B1,DT1CT_ERMDI06_B1,
     DT1CT_ERMDI07_B1,DT1CT_ERMDI08_B1,DT1CT_ERMDI09_B1,DT1CT_ERMDI10_B1,DT1CT_ERMDI11_B1,DT1CT_ERMDI12_B1,
     DT1CT_ERMDI13_B1,DT1CT_ERMDI14_B1,DT1CT_ERMDO01_B1,DT1CT_ERMDO02_B1,DT1CT_ERMDO03_B1,DT1CT_ERMDO04_B1,
     DT1CT_ERMDO05_B1,DT1CT_ERMDO06_B1,DT1CT_ERMDO07_B1,DT1CT_ERMDO08_B1,DT1CT_ERMDO09_B1,DT1CT_ERMDO10_B1;
     unsigned short int DT1CT_ERMAO1FedBk_U16,DT1CT_ERMAO2FedBk_U16,DT1CT_ERMAI1_U16,DT1CT_ERMAI2_U16,DT1CT_ERMPWM1_U16,DT1CT_ERMPWM2_U16,
     DT1CT_ERMPWM3_U16,DT1CT_ERMPWM4_U16;
     quint32 DT1CT_RunningKilometers_U32,DT1CT_TractionEngyConsumption_U32,DT1CT_AxPowerEngyConsumption_U32,DT1CT_ReEngy_U32,DT1CT_ServiceDistance_U32,DT1CT_TCMSTotalTime_U32;
     unsigned char DT1CT_ERMTimeYear_U8,DT1CT_ERMTimeMonth_U8,DT1CT_ERMTimeDay_U8,DT1CT_ERMTimeHour_U8,DT1CT_ERMTimeMinute_U8,DT1CT_ERMTimeSecond_U8;
     unsigned short int DT1CT_TCMSRunTime_U16;

     unsigned char DT2CT_ERMLfSignal_U8;
     //DT2CT_ERMSWVer_U8;
     bool DT2CT_ERMSWVerValid_B1;
     unsigned char DT2CT_ERMDIO1LfSignal_U8,DT2CT_ERMDIO2LfSignal_U8,DT2CT_ERMAXLfSignal_U8,DT2CT_ERMDevIPa_U8,DT2CT_ERMDevIPb_U8,DT2CT_ERMDevIPc_U8,
     DT2CT_ERMDevIPd_U8;
     bool DT2CT_ERMDI01_B1,DT2CT_ERMDI02_B1,DT2CT_ERMDI03_B1,DT2CT_ERMDI04_B1,DT2CT_ERMDI05_B1,DT2CT_ERMDI06_B1,
     DT2CT_ERMDI07_B1,DT2CT_ERMDI08_B1,DT2CT_ERMDI09_B1,DT2CT_ERMDI10_B1,DT2CT_ERMDI11_B1,DT2CT_ERMDI12_B1,
     DT2CT_ERMDI13_B1,DT2CT_ERMDI14_B1,DT2CT_ERMDO01_B1,DT2CT_ERMDO02_B1,DT2CT_ERMDO03_B1,DT2CT_ERMDO04_B1,
     DT2CT_ERMDO05_B1,DT2CT_ERMDO06_B1,DT2CT_ERMDO07_B1,DT2CT_ERMDO08_B1,DT2CT_ERMDO09_B1,DT2CT_ERMDO10_B1;
     unsigned short int DT2CT_ERMAO1FedBk_U16,DT2CT_ERMAO2FedBk_U16,DT2CT_ERMAI1_U16,DT2CT_ERMAI2_U16,DT2CT_ERMPWM1_U16,DT2CT_ERMPWM2_U16,
     DT2CT_ERMPWM3_U16,DT2CT_ERMPWM4_U16;
     quint32 DT2CT_RunningKilometers_U32,DT2CT_TractionEngyConsumption_U32,DT2CT_AxPowerEngyConsumption_U32,DT2CT_ReEngy_U32,DT2CT_ServiceDistance_U32,DT2CT_TCMSTotalTime_U32;
     unsigned char DT2CT_ERMTimeYear_U8,DT2CT_ERMTimeMonth_U8,DT2CT_ERMTimeDay_U8,DT2CT_ERMTimeHour_U8,DT2CT_ERMTimeMinute_U8,DT2CT_ERMTimeSecond_U8;
     unsigned short int DT2CT_TCMSRunTime_U16;

     //dcdc->ccu
     unsigned short int DC1CT_ILineVolt_U16,DC1CT_ISuppCapVolt_U16,DC1CT_ILineCurrent_U16,DC1CT_ISupercapVolt_U16,DC1CT_Ilifesignal_U16,DC1CT_IRealTimeEnergy_U16,
     DC1CT_ITotalEnergy_U16;
     bool DC1CT_IKM4state_B1,DC1CT_IKM3state_B1,DC1CT_IKM2state_B1,DC1CT_IKM1state_B1,DC1CT_IDisChargeFinish_B1,DC1CT_IChargeFinish_B1,
     DC1CT_IDisChargeState_B1,DC1CT_IChargeState_B1,DC1CT_ICutOfffinish_B1,DC1CT_Ifail_B1,DC1CT_IKM5state_B1;
     unsigned short int DC1CT_ISuppCapCurrent_U16;
     //unsigned char DC1CT_ISoftwareVerL_U8,DC1CT_ISoftwareVerH_U8;
     bool DC1CT_IOverTemp_B1,DC1CT_IKM3fail_B1,DC1CT_ILineVoltHigh_B1,DC1CT_ISuppCapVoltHighHW_B1,DC1CT_ISuppCapVoltHigh_B1,DC1CT_IKM5fail_B1,
     DC1CT_IKM1fail_B1,DC1CT_IKM2fail_B1,DC1CT_IUCAPHighVolt_B1,DC1CT_IFuse2fail_B1,DC1CT_IFuse1fail_B1,DC1CT_IFanBreakerfail_B1,
     DC1CT_IL1OverTemp_B1,DC1CT_IFanOverTemp_B1,DC1CT_IKM4fail_B1,DC1CT_IDriverHWfail_B1,DC1CT_IOutPutShort_B1,DC1CT_IGenLineLackVolt_B1,
     DC1CT_ISupercapOverVoltHW_B1,DC1CT_ISupercapOverVoltSW_B1,DC1CT_IOutPutOverVoltHW_B1,DC1CT_ISupercapOverCurr_B1,DC1CT_ILineOverCurrHW_B1,DC1CT_ILineOverCurr_B1,
     DC1CT_ILineVoltfail_B1,DC1CT_I24VLackVoit_B1,DC1CT_IVoltSensorInSC_B1,DC1CT_IFanNoCurr_B1,DC1CT_IFanOverCurr_B1,DC1CT_IKM6Fail_B1,
     DC1CT_ISCOverCurr_B1,DC1CT_ICanCommfail_B1,DC1CT_ISCFire_B1,DC1CT_ISCCommfail_B1,DC1CT_IFusefailSW_B1,DC1CT_ISCStopChargeSW_B1,
     DC1CT_ISCAlarmSW_B1,DC1CT_IFusefailHW_B1,DC1CT_ISCStopChargeHW_B1,DC1CT_ISCAlarmHW_B1;
     unsigned char DC1CT_IGWlifesignal_U8,DC1CT_IGWSWVersion_U8,DC1CT_IGWSWitchPos_U8;
     unsigned short int DC1CT_ICapaGroupVolt_U16;
     unsigned char DC1CT_ISOC_U8,DC1CT_Ilifesignal_U8;
     signed short int DC1CT_ICapaGroupDisCurr;
     unsigned char DC1CT_ICapaGroupfailCode_U8;
     bool DC1CT_ICommfail_B1,DC1CT_ISubNodecommfail_B1,DC1CT_IContactorStick_B1,DC1CT_ILeakCurrMajorfail_B1,DC1CT_IMedifail_B1,DC1CT_IMajorfail_B1,
     DC1CT_IStopDischarge_B1,DC1CT_IStopCharge_B1;
     unsigned char DC1CT_IMAXTemp_U8,DC1CT_IMAXTempCode_U8,DC1CT_IMinTemp_U8,DC1CT_IMINTempCode_U8;
     bool DC1CT_ILeakCurrMedifail_B1,DC1CT_ITotalVoltLowMedifail_B1,DC1CT_ITotalVoltHighMedifail_B1,DC1CT_ITempSensorfail_B1,DC1CT_ICurrMedifail_B1,DC1CT_ISinVoltHighMedifail_B1,
     DC1CT_ISinVoltLowMedifail_B1,DC1CT_ITempMedifail_B1,DC1CT_IWaterfail_B1,DC1CT_ITotalVoltLowMajorfail_B1,DC1CT_ITotalVoltHighMajorfail_B1,DC1CT_IFireAlarm_B1,
     DC1CT_ICurrMajorfail_B1,DC1CT_ISinVoltHighMajorfail_B1,DC1CT_ISinVoltLowMajorfail_B1,DC1CT_ITempMajorfail_B1,DC1CT_IFuseOpen_B1;
     unsigned short int DC1CT_ISCMinVolt_U16;
     unsigned char DC1CT_ISCMinVoltCode_U8,DC1CT_ISCMinVoltModuleCode_U8;
     unsigned short int DC1CT_ISCSecMinVolt_U16;
     unsigned char DC1CT_ISCSecMinVoltCode_U8,DC1CT_ISCSecMinVoltModuleCode_U8;
     unsigned short int DC1CT_ISCMaxVolt_U16;
     unsigned char DC1CT_ISCMaxVoltCode_U8,DC1CT_ISCMaxVoltModuleCode_U8;
     unsigned short int DC1CT_ISCSecMaxVolt_U16;
     unsigned char DC1CT_ISCSecMaxVoltCode_U8,DC1CT_ISCSecMaxVoltModuleCode_U8;

     unsigned short int DC2CT_ILineVolt_U16,DC2CT_ISuppCapVolt_U16,DC2CT_ILineCurrent_U16,DC2CT_ISupercapVolt_U16,DC2CT_Ilifesignal_U16,DC2CT_IRealTimeEnergy_U16,
     DC2CT_ITotalEnergy_U16;
     bool DC2CT_IKM4state_B1,DC2CT_IKM3state_B1,DC2CT_IKM2state_B1,DC2CT_IKM1state_B1,DC2CT_IDisChargeFinish_B1,DC2CT_IChargeFinish_B1,
     DC2CT_IDisChargeState_B1,DC2CT_IChargeState_B1,DC2CT_ICutOfffinish_B1,DC2CT_Ifail_B1,DC2CT_IKM5state_B1;
     unsigned short int DC2CT_ISuppCapCurrent_U16;
     //unsigned char DC2CT_ISoftwareVerL_U8,DC2CT_ISoftwareVerH_U8;
     bool DC2CT_IOverTemp_B1,DC2CT_IKM3fail_B1,DC2CT_ILineVoltHigh_B1,DC2CT_ISuppCapVoltHighHW_B1,DC2CT_ISuppCapVoltHigh_B1,DC2CT_IKM5fail_B1,
     DC2CT_IKM1fail_B1,DC2CT_IKM2fail_B1,DC2CT_IUCAPHighVolt_B1,DC2CT_IFuse2fail_B1,DC2CT_IFuse1fail_B1,DC2CT_IFanBreakerfail_B1,
     DC2CT_IL1OverTemp_B1,DC2CT_IFanOverTemp_B1,DC2CT_IKM4fail_B1,DC2CT_IDriverHWfail_B1,DC2CT_IOutPutShort_B1,DC2CT_IGenLineLackVolt_B1,
     DC2CT_ISupercapOverVoltHW_B1,DC2CT_ISupercapOverVoltSW_B1,DC2CT_IOutPutOverVoltHW_B1,DC2CT_ISupercapOverCurr_B1,DC2CT_ILineOverCurrHW_B1,DC2CT_ILineOverCurr_B1,
     DC2CT_ILineVoltfail_B1,DC2CT_I24VLackVoit_B1,DC2CT_IVoltSensorInSC_B1,DC2CT_IFanNoCurr_B1,DC2CT_IFanOverCurr_B1,DC2CT_IKM6Fail_B1,
     DC2CT_ISCOverCurr_B1,DC2CT_ICanCommfail_B1,DC2CT_ISCFire_B1,DC2CT_ISCCommfail_B1,DC2CT_IFusefailSW_B1,DC2CT_ISCStopChargeSW_B1,
     DC2CT_ISCAlarmSW_B1,DC2CT_IFusefailHW_B1,DC2CT_ISCStopChargeHW_B1,DC2CT_ISCAlarmHW_B1;
     unsigned char DC2CT_IGWlifesignal_U8,DC2CT_IGWSWVersion_U8,DC2CT_IGWSWitchPos_U8;
     unsigned short int DC2CT_ICapaGroupVolt_U16;
     unsigned char DC2CT_ISOC_U8,DC2CT_Ilifesignal_U8;
     signed short int DC2CT_ICapaGroupDisCurr_I16;
     unsigned char DC2CT_ICapaGroupfailCode_U8;
     bool DC2CT_ICommfail_B1,DC2CT_ISubNodecommfail_B1,DC2CT_IContactorStick_B1,DC2CT_ILeakCurrMajorfail_B1,DC2CT_IMedifail_B1,DC2CT_IMajorfail_B1,
     DC2CT_IStopDischarge_B1,DC2CT_IStopCharge_B1;
     unsigned char DC2CT_IMAXTemp_U8,DC2CT_IMAXTempCode_U8,DC2CT_IMinTemp_U8,DC2CT_IMINTempCode_U8;
     bool DC2CT_ILeakCurrMedifail_B1,DC2CT_ITotalVoltLowMedifail_B1,DC2CT_ITotalVoltHighMedifail_B1,DC2CT_ITempSensorfail_B1,DC2CT_ICurrMedifail_B1,DC2CT_ISinVoltHighMedifail_B1,
     DC2CT_ISinVoltLowMedifail_B1,DC2CT_ITempMedifail_B1,DC2CT_IWaterfail_B1,DC2CT_ITotalVoltLowMajorfail_B1,DC2CT_ITotalVoltHighMajorfail_B1,DC2CT_IFireAlarm_B1,
     DC2CT_ICurrMajorfail_B1,DC2CT_ISinVoltHighMajorfail_B1,DC2CT_ISinVoltLowMajorfail_B1,DC2CT_ITempMajorfail_B1,DC2CT_IFuseOpen_B1;
     unsigned short int DC2CT_ISCMinVolt_U16;
     unsigned char DC2CT_ISCMinVoltCode_U8,DC2CT_ISCMinVoltModuleCode_U8;
     unsigned short int DC2CT_ISCSecMinVolt_U16;
     unsigned char DC2CT_ISCSecMinVoltCode_U8,DC2CT_ISCSecMinVoltModuleCode_U8;
     unsigned short int DC2CT_ISCMaxVolt_U16;
     unsigned char DC2CT_ISCMaxVoltCode_U8,DC2CT_ISCMaxVoltModuleCode_U8;
     unsigned short int DC2CT_ISCSecMaxVolt_U16;
     unsigned char DC2CT_ISCSecMaxVoltCode_U8,DC2CT_ISCSecMaxVoltModuleCode_U8;

     //TBCU->CCU
     unsigned char TR1CT_IPCESystState_U8;
     unsigned short int TR1CT_IDevIsAlive_U16;
     bool TR1CT_IDevOper_B1,TR1CT_IShortCircuitMot1_B1,TR1CT_IShortCircuitMot2_B1,TR1CT_IAutoTestRes_B1,TR1CT_ICriticalFltPres_B1,TR1CT_IInformFltPres_B1,
     TR1CT_IMajorFltPres_B1,TR1CT_IInvIGBTFault_B1,TR1CT_IMedium1OK_B1,TR1CT_IMedium2OK_B1,TR1CT_IEV_TX_FAULT_B1_B1,TR1CT_IEqpInFault_B1,
     TR1CT_IEqpIsReady_B1,TR1CT_IOffLoadTest_B1,TR1CT_IReducPowrTest_B1,TR1CT_IEqpInMaintc_B1;
     signed short int TR1CT_INominalEffortE_I16,TR1CT_INominalEffortM_I16,TR1CT_IHvValue_I16;
     unsigned short int TR1CT_IDistance_U16;
     signed short int TR1CT_ISpeedAxle1_I16,TR1CT_ISpeedAxle2_I16,TR1CT_ISpeedAxle3_I16,TR1CT_IRefSpeed_I16,TR1CT_ITractionCurLim_I16,TR1CT_IBrakeCurLim_I16;
     signed char TR1CT_ITractionAvail_I8,TR1CT_IElecBrakeAvail_I8;
     bool TR1CT_ITraction1Ok_B1,TR1CT_ITraction2Ok_B1,TR1CT_IElecBrk1Ok_B1,TR1CT_IElecBrk2Ok_B1,TR1CT_ILSwClose_B1,TR1CT_ILSwFault_B1,
     TR1CT_ILSwStuck_B1,TR1CT_IPrechClose_B1,TR1CT_IPrechFault_B1,TR1CT_IPrechStuck_B1,TR1CT_IDiffGroundFault_B1,TR1CT_IDirectionFlt_B1,
     TR1CT_ISpeed1Ok_B1,TR1CT_ISpeed2Ok_B1,TR1CT_ISpeed3Ok_B1,TR1CT_IRefSpeedOk_B1,TR1CT_ISpeedLimit_B1,TR1CT_IOverspeed_B1,
     TR1CT_IWheelDiam1Ok_B1,TR1CT_IWheelDiam2Ok_B1,TR1CT_IWheelDiam3Ok_B1,TR1CT_ISlipDetect_B1,TR1CT_ISlideDetect_B1,TR1CT_ISlipSlideFault_B1,
     TR1CT_IInvTempHigh1_B1,TR1CT_IInvTempHigh2_B1,TR1CT_IFanOn_B1,TR1CT_IMotorTempHigh1_B1,TR1CT_IMotorTempHigh2_B1,TR1CT_IRhTempHigh1_B1,
     TR1CT_IRhTempHigh2_B1,TR1CT_IEffortReqErr_B1,TR1CT_IEffortLimit_B1,TR1CT_ITractionCurLimOn_B1,TR1CT_IBrakeCurLimOn_B1,TR1CT_IRelStandstillBrk_B1,
     TR1CT_IApplStandstillBrk_B1,TR1CT_IMecBrakeOk_B1,TR1CT_IBrkChopper1Ok_B1,TR1CT_IBrkChopper2Ok_B1,TR1CT_IMContClose1_B1,TR1CT_IMContFault1_B1,
     TR1CT_IMContStuck1_B1,TR1CT_IMContClose2_B1,TR1CT_IMContFault2_B1,TR1CT_IMContStuck2_B1,TR1CT_IFastSlideDetect_B1;
     unsigned short int TR1CT_IDispLineVoltage_U16;
     signed short int TR1CT_IConsEnergy_I16;
     unsigned short int TR1CT_IMnaReg_U16,TR1CT_ISysStatus_U16,TR1CT_IFltCode_U16;
     signed short int TR1CT_IWheelDiam1_I16,TR1CT_IWheelDiam2_I16,TR1CT_IWheelDiam3_I16,TR1CT_IDispBrkChopper_I16,TR1CT_IElecEffortValue_I16,TR1CT_IInvFreq_I16,
     TR1CT_IDispLineCurrent_I16;
     signed char TR1CT_IPRMConfValue_I8,TR1CT_IPRMConfStatus_I8;
     bool TR1CT_ISpeedCh1Flt_B1,TR1CT_ISpeedCh2Flt_B1,TR1CT_ISpeedCh3Flt_B1,TR1CT_ISpeedCh4Flt_B1,TR1CT_ISpeedCh5Flt_B1,TR1CT_ISpeedCh6Flt_B1,
     TR1CT_IMnaLineGap_B1,TR1CT_IGRFFault_B1,TR1CT_IGRFWarning_B1,TR1CT_ILock_B1,TR1CT_IGRFLowWaterLevel_B1;
     unsigned short int TR1CT_ISerialNumber_U16;
     unsigned char TR1CT_INetwVersion0_U8,TR1CT_INetwVersion1_U8,TR1CT_INetwVersion2_U8,TR1CT_ISoftwVersion0_U8,TR1CT_ISoftwVersion1_U8,TR1CT_ISoftwVersion2_U8,
     TR1CT_IHardwVersion0_U8,TR1CT_IHardwVersion1_U8,TR1CT_IHardwVersion2_U8;
     unsigned short int TR1CT_IAutoTestStep_U16;
     bool TR1CT_IRescueTL_B1,TR1CT_IPulseEnable_B1,TR1CT_IMainCBOff_B1,TR1CT_IForwardTL_B1,TR1CT_IReverseTL_B1,TR1CT_IZSpeed_B1,
     TR1CT_IRollBack_B1,TR1CT_ITractionTL_B1,TR1CT_INoBrakeTL_B1,TR1CT_INoEmergBrk_B1,TR1CT_INoSafetyBrk_B1,TR1CT_INoAPSSupply_B1,
     TR1CT_IMecBrakeRel_B1,TR1CT_IMecBrakeAppli_B1,TR1CT_IMecBrakeIsol_B1,TR1CT_IBCURelay_B1,TR1CT_IMecBrakeOut0_B1,TR1CT_IMecBrakeOut1_B1,
     TR1CT_IMecBrakeOut2_B1,TR1CT_IMecBrakeOut3_B1,TR1CT_IReducPowrTestDone_B1,TR1CT_IReducPowrTestRes_B1,TR1CT_INoDeadmanEmergBrk_B1,TR1CT_INoDoorsPassengerEmergBrk_B1,
     TR1CT_ITrackBrakesOut_B1,TR1CT_ILBCActive_B1;
     unsigned char TR1CT_ITBCUReserved503240_U8,TR1CT_ITBCUReserved503248_U8;
     quint32 TR1CT_ISafetyIntegrity_U32;
     unsigned short int TR1CT_ITransmissionID_U16;
     signed short int TR1CT_ITimerCounter_I16;
     unsigned short int TR1CT_IconsEffortSigneAvAbcInvA_U16,TR1CT_IFElecAchieveBlend_U16,TR1CT_INDateAdj_U16,TR1CT_IVTB_U16;
     signed short TR1CT_IOutMotorTorqueNoABC_I16,TR1CT_IOutMotorTorqueWithABC_I16,TR1CT_IOutMechTorqueNoABC_I16,TR1CT_IOutMechTorqueWithABC_I16;
     unsigned short int TR1CT_IVoltageMeasurement_U16;
     signed short int TR1CT_ICurrPosMeasurement_I16,TR1CT_ICurrNegMeasurement_I16;
     bool TR1CT_IVs1MBVal_B1,TR1CT_IRemAC3RollbackFault_B1,TR1CT_IRemAC3EMFault_B1,TR1CT_IRemAC3SSBFault_B1,TR1CT_IRemSlideFault_B1,TR1CT_IOutRollback_B1,
     TR1CT_IOutLifeToggle_B1,TR1CT_IOutCheckIDbit1_B1,TR1CT_IOutCheckIDbit2_B1,TR1CT_IOutCheckIDbit3_B1,TR1CT_IOutCheckIDbit4_B1;

     unsigned char TR2CT_IPCESystState_U8;
     unsigned short int TR2CT_IDevIsAlive_U16;
     bool TR2CT_IDevOper_B1,TR2CT_IShortCircuitMot1_B1,TR2CT_IShortCircuitMot2_B1,TR2CT_IAutoTestRes_B1,TR2CT_ICriticalFltPres_B1,TR2CT_IInformFltPres_B1,
     TR2CT_IMajorFltPres_B1,TR2CT_IInvIGBTFault_B1,TR2CT_IMedium1OK_B1,TR2CT_IMedium2OK_B1,TR2CT_IEV_TX_FAULT_B1_B1,TR2CT_IEqpInFault_B1,
     TR2CT_IEqpIsReady_B1,TR2CT_IOffLoadTest_B1,TR2CT_IReducPowrTest_B1,TR2CT_IEqpInMaintc_B1;
     signed short int TR2CT_INominalEffortE_I16,TR2CT_INominalEffortM_I16,TR2CT_IHvValue_I16;
     unsigned short int TR2CT_IDistance_U16;
     signed short int TR2CT_ISpeedAxle1_I16,TR2CT_ISpeedAxle2_I16,TR2CT_ISpeedAxle3_I16,TR2CT_IRefSpeed_I16,TR2CT_ITractionCurLim_I16,TR2CT_IBrakeCurLim_I16;
     signed char TR2CT_ITractionAvail_I8,TR2CT_IElecBrakeAvail_I8;
     bool TR2CT_ITraction1Ok_B1,TR2CT_ITraction2Ok_B1,TR2CT_IElecBrk1Ok_B1,TR2CT_IElecBrk2Ok_B1,TR2CT_ILSwClose_B1,TR2CT_ILSwFault_B1,
     TR2CT_ILSwStuck_B1,TR2CT_IPrechClose_B1,TR2CT_IPrechFault_B1,TR2CT_IPrechStuck_B1,TR2CT_IDiffGroundFault_B1,TR2CT_IDirectionFlt_B1,
     TR2CT_ISpeed1Ok_B1,TR2CT_ISpeed2Ok_B1,TR2CT_ISpeed3Ok_B1,TR2CT_IRefSpeedOk_B1,TR2CT_ISpeedLimit_B1,TR2CT_IOverspeed_B1,
     TR2CT_IWheelDiam1Ok_B1,TR2CT_IWheelDiam2Ok_B1,TR2CT_IWheelDiam3Ok_B1,TR2CT_ISlipDetect_B1,TR2CT_ISlideDetect_B1,TR2CT_ISlipSlideFault_B1,
     TR2CT_IInvTempHigh1_B1,TR2CT_IInvTempHigh2_B1,TR2CT_IFanOn_B1,TR2CT_IMotorTempHigh1_B1,TR2CT_IMotorTempHigh2_B1,TR2CT_IRhTempHigh1_B1,
     TR2CT_IRhTempHigh2_B1,TR2CT_IEffortReqErr_B1,TR2CT_IEffortLimit_B1,TR2CT_ITractionCurLimOn_B1,TR2CT_IBrakeCurLimOn_B1,TR2CT_IRelStandstillBrk_B1,
     TR2CT_IApplStandstillBrk_B1,TR2CT_IMecBrakeOk_B1,TR2CT_IBrkChopper1Ok_B1,TR2CT_IBrkChopper2Ok_B1,TR2CT_IMContClose1_B1,TR2CT_IMContFault1_B1,
     TR2CT_IMContStuck1_B1,TR2CT_IMContClose2_B1,TR2CT_IMContFault2_B1,TR2CT_IMContStuck2_B1,TR2CT_IFastSlideDetect_B1;
     unsigned short int TR2CT_IDispLineVoltage_U16;
     signed short int TR2CT_IConsEnergy_I16;
     unsigned short int TR2CT_IMnaReg_U16,TR2CT_ISysStatus_U16,TR2CT_IFltCode_U16;
     signed short int TR2CT_IWheelDiam1_I16,TR2CT_IWheelDiam2_I16,TR2CT_IWheelDiam3_I16,TR2CT_IDispBrkChopper_I16,TR2CT_IElecEffortValue_I16,TR2CT_IInvFreq_I16,
     TR2CT_IDispLineCurrent_I16;
     signed char TR2CT_IPRMConfValue_I8,TR2CT_IPRMConfStatus_I8;
     bool TR2CT_ISpeedCh1Flt_B1,TR2CT_ISpeedCh2Flt_B1,TR2CT_ISpeedCh3Flt_B1,TR2CT_ISpeedCh4Flt_B1,TR2CT_ISpeedCh5Flt_B1,TR2CT_ISpeedCh6Flt_B1,
     TR2CT_IMnaLineGap_B1,TR2CT_IGRFFault_B1,TR2CT_IGRFWarning_B1,TR2CT_ILock_B1,TR2CT_IGRFLowWaterLevel_B1;
     unsigned short int TR2CT_ISerialNumber_U16;
     unsigned char TR2CT_INetwVersion0_U8,TR2CT_INetwVersion1_U8,TR2CT_INetwVersion2_U8,TR2CT_ISoftwVersion0_U8,TR2CT_ISoftwVersion1_U8,TR2CT_ISoftwVersion2_U8,
     TR2CT_IHardwVersion0_U8,TR2CT_IHardwVersion1_U8,TR2CT_IHardwVersion2_U8;
     unsigned short int TR2CT_IAutoTestStep_U16;
     bool TR2CT_IRescueTL_B1,TR2CT_IPulseEnable_B1,TR2CT_IMainCBOff_B1,TR2CT_IForwardTL_B1,TR2CT_IReverseTL_B1,TR2CT_IZSpeed_B1,
     TR2CT_IRollBack_B1,TR2CT_ITractionTL_B1,TR2CT_INoBrakeTL_B1,TR2CT_INoEmergBrk_B1,TR2CT_INoSafetyBrk_B1,TR2CT_INoAPSSupply_B1,
     TR2CT_IMecBrakeRel_B1,TR2CT_IMecBrakeAppli_B1,TR2CT_IMecBrakeIsol_B1,TR2CT_IBCURelay_B1,TR2CT_IMecBrakeOut0_B1,TR2CT_IMecBrakeOut1_B1,
     TR2CT_IMecBrakeOut2_B1,TR2CT_IMecBrakeOut3_B1,TR2CT_IReducPowrTestDone_B1,TR2CT_IReducPowrTestRes_B1,TR2CT_INoDeadmanEmergBrk_B1,TR2CT_INoDoorsPassengerEmergBrk_B1,
     TR2CT_ITrackBrakesOut_B1,TR2CT_ILBCActive_B1;
     unsigned char TR2CT_ITBCUReserved503240_U8,TR2CT_ITBCUReserved503248_U8;
     quint32 TR2CT_ISafetyIntegrity_U32;
     unsigned short int TR2CT_ITransmissionID_U16;
     signed short int TR2CT_ITimerCounter_I16;
     unsigned short int TR2CT_IconsEffortSigneAvAbcInvA_U16,TR2CT_IFElecAchieveBlend_U16,TR2CT_INDateAdj_U16,TR2CT_IVTB_U16;
     signed short int TR2CT_IOutMotorTorqueNoABC_I16,TR2CT_IOutMotorTorqueWithABC_I16,TR2CT_IOutMechTorqueNoABC_I16,TR2CT_IOutMechTorqueWithABC_I16;
     unsigned short int TR2CT_IVoltageMeasurement_U16;
     signed short int TR2CT_ICurrPosMeasurement_I16,TR2CT_ICurrNegMeasurement_I16;
     bool TR2CT_IVs1MBVal_B1,TR2CT_IRemAC3RollbackFault_B1,TR2CT_IRemAC3EMFault_B1,TR2CT_IRemAC3SSBFault_B1,TR2CT_IRemSlideFault_B1,TR2CT_IOutRollback_B1,
     TR2CT_IOutLifeToggle_B1,TR2CT_IOutCheckIDbit1_B1,TR2CT_IOutCheckIDbit2_B1,TR2CT_IOutCheckIDbit3_B1,TR2CT_IOutCheckIDbit4_B1;

     QString ccu1Version, ccu1MvbVersion, ccu1SDBVersion, ccu1VxVersion,
     ccu2Version, ccu2MvbVersion, ccu2SDBVersion, ccu2VxVersion, erm1Version, erm2Version,hmi1Version,hmi2Version,
     acuVersion,edcu1Version, edcu2Version, edcu3Version, edcu4Version, edcu5Version, edcu6Version,
     edcu7Version, edcu8Version, edcu9Version, edcu10Version, edcu11Version, edcu12Version,
     hvac1Version,hvac2Version, pisVersion, bcuVersion,tbcu1NetVersion, tbcu1SoftVersion, tbcu1HardVersion,tbcu2NetVersion, tbcu2SoftVersion, tbcu2HardVersion,
     dcdc1GwVersion,dcdc1SoftVersion, dcdc2GwVersion,dcdc2SoftVersion,
     riom1gw, riom1di1, riom1di2,riom1do1,riom1do2,riom1ax,
     riom2gw, riom2di1, riom2di2, riom2do1, riom2do2, riom2ax,
     riom3gw, riom3di1, riom3do1,
     riom4gw, riom4di1, riom4do1,
     riom5gw, riom5di1, riom5di2, riom5do1, riom5do2, riom5ax,
     riom6gw, riom6di1, riom6di2, riom6do1, riom6do2, riom6ax;
private:
    CrrcMvb* crrcMvb;

public:
    void initialHmiSignals();
    void updateHmiSignals();
    void updateErmSignals();
    void updateRiomsSignals();
    void updateCcuSignals();
    void updateTBCUSignals();
    void updateDCDCSignals();
    void updateHVACSignals();
};

#endif // DATABASE_H
