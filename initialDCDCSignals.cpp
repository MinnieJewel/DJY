#include "database.h"

void Database::updateDCDCSignals()
{
    this->dcdc1SoftVersion.sprintf("%d.%d", this->crrcMvb->getUnsignedChar(0xA11,3), this->crrcMvb->getUnsignedChar(0xA11,2));
    this->dcdc2SoftVersion.sprintf("%d.%d", this->crrcMvb->getUnsignedChar(0xA21,3), this->crrcMvb->getUnsignedChar(0xA21,2));
    this->dcdc1GwVersion.sprintf("%d",this->crrcMvb->getUnsignedChar(0xA11,this->crrcMvb->getUnsignedChar(0xA11, 30)));
    this->dcdc2GwVersion.sprintf("%d",this->crrcMvb->getUnsignedChar(0xA21,this->crrcMvb->getUnsignedChar(0xA21, 30)));
    this->DC1CT_ILineVolt_U16 = this->crrcMvb->getUnsignedInt(0xA10,0);
    this->DC1CT_ISuppCapVolt_U16 = this->crrcMvb->getUnsignedInt(0xA10,2);
    this->DC1CT_ILineCurrent_U16 = this->crrcMvb->getUnsignedInt(0xA10,4);
    this->DC1CT_ISupercapVolt_U16 = this->crrcMvb->getUnsignedInt(0xA10,6);
    this->DC1CT_Ilifesignal_U16 = this->crrcMvb->getUnsignedInt(0xA10,8);
    this->DC1CT_IRealTimeEnergy_U16 = this->crrcMvb->getUnsignedInt(0xA10,10);
    this->DC1CT_ITotalEnergy_U16 = this->crrcMvb->getUnsignedInt(0xA10,12);
    this->DC1CT_IKM4state_B1 = this->crrcMvb->getBool(0xA10,14,0);
    this->DC1CT_IKM3state_B1 = this->crrcMvb->getBool(0xA10,14,1);
    this->DC1CT_IKM2state_B1 = this->crrcMvb->getBool(0xA10,14,2);
    this->DC1CT_IKM1state_B1 = this->crrcMvb->getBool(0xA10,14,3);
    this->DC1CT_IDisChargeFinish_B1 = this->crrcMvb->getBool(0xA10,14,4);
    this->DC1CT_IChargeFinish_B1 = this->crrcMvb->getBool(0xA10,14,5);
    this->DC1CT_IDisChargeState_B1 = this->crrcMvb->getBool(0xA10,14,6);
    this->DC1CT_IChargeState_B1 = this->crrcMvb->getBool(0xA10,14,7);
    this->DC1CT_ICutOfffinish_B1 = this->crrcMvb->getBool(0xA10,15,5);
    this->DC1CT_Ifail_B1 = this->crrcMvb->getBool(0xA10,15,6);
    this->DC1CT_IKM5state_B1 = this->crrcMvb->getBool(0xA10,15,7);
    this->DC1CT_ISuppCapCurrent_U16 = this->crrcMvb->getUnsignedInt(0xA11,0);

    this->DC1CT_IOverTemp_B1 = this->crrcMvb->getBool(0xA11,4,0);
    this->DC1CT_IKM3fail_B1 = this->crrcMvb->getBool(0xA11,4,1);
    this->DC1CT_ILineVoltHigh_B1 = this->crrcMvb->getBool(0xA11,4,2);
    this->DC1CT_ISuppCapVoltHighHW_B1 = this->crrcMvb->getBool(0xA11,4,3);
    this->DC1CT_ISuppCapVoltHigh_B1 = this->crrcMvb->getBool(0xA11,4,4);
    this->DC1CT_IKM5fail_B1 = this->crrcMvb->getBool(0xA11,4,5);
    this->DC1CT_IKM1fail_B1 = this->crrcMvb->getBool(0xA11,4,6);
    this->DC1CT_IKM2fail_B1 = this->crrcMvb->getBool(0xA11,4,7);
    this->DC1CT_IUCAPHighVolt_B1 = this->crrcMvb->getBool(0xA11,5,0);
    this->DC1CT_IFuse2fail_B1 = this->crrcMvb->getBool(0xA11,5,1);
    this->DC1CT_IFuse1fail_B1 = this->crrcMvb->getBool(0xA11,5,2);
    this->DC1CT_IFanBreakerfail_B1 = this->crrcMvb->getBool(0xA11,5,3);
    this->DC1CT_IL1OverTemp_B1 = this->crrcMvb->getBool(0xA11,5,4);
    this->DC1CT_IFanOverTemp_B1 = this->crrcMvb->getBool(0xA11,5,5);
    this->DC1CT_IKM4fail_B1 = this->crrcMvb->getBool(0xA11,5,6);
    this->DC1CT_IDriverHWfail_B1 = this->crrcMvb->getBool(0xA11,5,7);
    this->DC1CT_IOutPutShort_B1 = this->crrcMvb->getBool(0xA11,6,0);
    this->DC1CT_IGenLineLackVolt_B1 = this->crrcMvb->getBool(0xA11,6,1);
    this->DC1CT_ISupercapOverVoltHW_B1 = this->crrcMvb->getBool(0xA11,6,2);
    this->DC1CT_ISupercapOverVoltSW_B1 = this->crrcMvb->getBool(0xA11,6,3);
    this->DC1CT_IOutPutOverVoltHW_B1 = this->crrcMvb->getBool(0xA11,6,4);
    this->DC1CT_ISupercapOverCurr_B1 = this->crrcMvb->getBool(0xA11,6,5);
    this->DC1CT_ILineOverCurrHW_B1 = this->crrcMvb->getBool(0xA11,6,6);
    this->DC1CT_ILineOverCurr_B1 = this->crrcMvb->getBool(0xA11,6,7);
    this->DC1CT_ILineVoltfail_B1 = this->crrcMvb->getBool(0xA11,7,0);
    this->DC1CT_I24VLackVoit_B1 = this->crrcMvb->getBool(0xA11,7,1);
    this->DC1CT_IVoltSensorInSC_B1 = this->crrcMvb->getBool(0xA11,7,2);
    this->DC1CT_IFanNoCurr_B1 = this->crrcMvb->getBool(0xA11,7,3);
    this->DC1CT_IFanOverCurr_B1 = this->crrcMvb->getBool(0xA11,7,4);
    this->DC1CT_IKM6Fail_B1 = this->crrcMvb->getBool(0xA11,7,5);
    this->DC1CT_ISCOverCurr_B1 = this->crrcMvb->getBool(0xA11,7,6);
    this->DC1CT_ICanCommfail_B1 = this->crrcMvb->getBool(0xA11,7,7);
    this->DC1CT_ISCFire_B1 = this->crrcMvb->getBool(0xA11,8,0);
    this->DC1CT_ISCCommfail_B1 = this->crrcMvb->getBool(0xA11,8,1);
    this->DC1CT_IFusefailSW_B1 = this->crrcMvb->getBool(0xA11,8,2);
    this->DC1CT_ISCStopChargeSW_B1 = this->crrcMvb->getBool(0xA11,8,3);
    this->DC1CT_ISCAlarmSW_B1 = this->crrcMvb->getBool(0xA11,8,4);
    this->DC1CT_IFusefailHW_B1 = this->crrcMvb->getBool(0xA11,8,5);
    this->DC1CT_ISCStopChargeHW_B1 = this->crrcMvb->getBool(0xA11,8,6);
    this->DC1CT_ISCAlarmHW_B1 = this->crrcMvb->getBool(0xA11,8,7);
    this->DC1CT_IGWlifesignal_U8 = this->crrcMvb->getUnsignedChar(0xA11,29);
    this->DC1CT_IGWSWVersion_U8 = this->crrcMvb->getUnsignedChar(0xA11,30);
    this->DC1CT_IGWSWitchPos_U8 = this->crrcMvb->getUnsignedChar(0xA11,31);
    this->DC1CT_ICapaGroupVolt_U16 = this->crrcMvb->getUnsignedInt(0xA12,0);
    this->DC1CT_ISOC_U8 = this->crrcMvb->getUnsignedChar(0xA12,2);
    this->DC1CT_Ilifesignal_U8 = this->crrcMvb->getUnsignedChar(0xA12,3);
    this->DC1CT_ICapaGroupDisCurr = this->crrcMvb->getSignedInt(0xA12,4);
    this->DC1CT_ICapaGroupfailCode_U8 = this->crrcMvb->getUnsignedChar(0xA12,6);
    this->DC1CT_ICommfail_B1 = this->crrcMvb->getBool(0xA12,7,0);
    this->DC1CT_ISubNodecommfail_B1 = this->crrcMvb->getBool(0xA12,7,1);
    this->DC1CT_IContactorStick_B1 = this->crrcMvb->getBool(0xA12,7,2);
    this->DC1CT_ILeakCurrMajorfail_B1 = this->crrcMvb->getBool(0xA12,7,3);
    this->DC1CT_IMedifail_B1 = this->crrcMvb->getBool(0xA12,7,4);
    this->DC1CT_IMajorfail_B1 = this->crrcMvb->getBool(0xA12,7,5);
    this->DC1CT_IStopDischarge_B1 = this->crrcMvb->getBool(0xA12,7,6);
    this->DC1CT_IStopCharge_B1 = this->crrcMvb->getBool(0xA12,7,7);
    this->DC1CT_IMAXTemp_U8 = this->crrcMvb->getUnsignedChar(0xA12,8);
    this->DC1CT_IMAXTempCode_U8 = this->crrcMvb->getUnsignedChar(0xA12,9);
    this->DC1CT_IMinTemp_U8 = this->crrcMvb->getUnsignedChar(0xA12,10);
    this->DC1CT_IMINTempCode_U8 = this->crrcMvb->getUnsignedChar(0xA12,11);
    this->DC1CT_ILeakCurrMedifail_B1 = this->crrcMvb->getBool(0xA12,12,0);
    this->DC1CT_ITotalVoltLowMedifail_B1 = this->crrcMvb->getBool(0xA12,12,1);
    this->DC1CT_ITotalVoltHighMedifail_B1 = this->crrcMvb->getBool(0xA12,12,2);
    this->DC1CT_ITempSensorfail_B1 = this->crrcMvb->getBool(0xA12,12,3);
    this->DC1CT_ICurrMedifail_B1 = this->crrcMvb->getBool(0xA12,12,4);
    this->DC1CT_ISinVoltHighMedifail_B1 = this->crrcMvb->getBool(0xA12,12,5);
    this->DC1CT_ISinVoltLowMedifail_B1 = this->crrcMvb->getBool(0xA12,12,6);
    this->DC1CT_ITempMedifail_B1 = this->crrcMvb->getBool(0xA12,12,7);
    this->DC1CT_IWaterfail_B1 = this->crrcMvb->getBool(0xA12,13,0);
    this->DC1CT_ITotalVoltLowMajorfail_B1 = this->crrcMvb->getBool(0xA12,13,1);
    this->DC1CT_ITotalVoltHighMajorfail_B1 = this->crrcMvb->getBool(0xA12,13,2);
    this->DC1CT_IFireAlarm_B1 = this->crrcMvb->getBool(0xA12,13,3);
    this->DC1CT_ICurrMajorfail_B1 = this->crrcMvb->getBool(0xA12,13,4);
    this->DC1CT_ISinVoltHighMajorfail_B1 = this->crrcMvb->getBool(0xA12,13,5);
    this->DC1CT_ISinVoltLowMajorfail_B1 = this->crrcMvb->getBool(0xA12,13,6);
    this->DC1CT_ITempMajorfail_B1 = this->crrcMvb->getBool(0xA12,13,7);
    this->DC1CT_IFuseOpen_B1 = this->crrcMvb->getBool(0xA12,14,7);
    this->DC1CT_ISCMinVolt_U16 = this->crrcMvb->getUnsignedInt(0xA12,16);
    this->DC1CT_ISCMinVoltCode_U8 = this->crrcMvb->getUnsignedChar(0xA12,18);
    this->DC1CT_ISCMinVoltModuleCode_U8 = this->crrcMvb->getUnsignedChar(0xA12,19);
    this->DC1CT_ISCSecMinVolt_U16 = this->crrcMvb->getUnsignedInt(0xA12,20);
    this->DC1CT_ISCSecMinVoltCode_U8 = this->crrcMvb->getUnsignedChar(0xA12,22);
    this->DC1CT_ISCSecMinVoltModuleCode_U8 = this->crrcMvb->getUnsignedChar(0xA12,23);
    this->DC1CT_ISCMaxVolt_U16 = this->crrcMvb->getUnsignedInt(0xA12,24);
    this->DC1CT_ISCMaxVoltCode_U8 = this->crrcMvb->getUnsignedChar(0xA12,26);
    this->DC1CT_ISCMaxVoltModuleCode_U8 = this->crrcMvb->getUnsignedChar(0xA12,27);
    this->DC1CT_ISCSecMaxVolt_U16 = this->crrcMvb->getUnsignedInt(0xA12,28);
    this->DC1CT_ISCSecMaxVoltCode_U8 = this->crrcMvb->getUnsignedChar(0xA12,30);
    this->DC1CT_ISCSecMaxVoltModuleCode_U8 = this->crrcMvb->getUnsignedChar(0xA12,31);

    this->DC2CT_ILineVolt_U16 = this->crrcMvb->getUnsignedInt(0xA20,0);
    this->DC2CT_ISuppCapVolt_U16 = this->crrcMvb->getUnsignedInt(0xA20,2);
    this->DC2CT_ILineCurrent_U16 = this->crrcMvb->getUnsignedInt(0xA20,4);
    this->DC2CT_ISupercapVolt_U16 = this->crrcMvb->getUnsignedInt(0xA20,6);
    this->DC2CT_Ilifesignal_U16 = this->crrcMvb->getUnsignedInt(0xA20,8);
    this->DC2CT_IRealTimeEnergy_U16 = this->crrcMvb->getUnsignedInt(0xA20,10);
    this->DC2CT_ITotalEnergy_U16 = this->crrcMvb->getUnsignedInt(0xA20,12);
    this->DC2CT_IKM4state_B1 = this->crrcMvb->getBool(0xA20,14,0);
    this->DC2CT_IKM3state_B1 = this->crrcMvb->getBool(0xA20,14,1);
    this->DC2CT_IKM2state_B1 = this->crrcMvb->getBool(0xA20,14,2);
    this->DC2CT_IKM1state_B1 = this->crrcMvb->getBool(0xA20,14,3);
    this->DC2CT_IDisChargeFinish_B1 = this->crrcMvb->getBool(0xA20,14,4);
    this->DC2CT_IChargeFinish_B1 = this->crrcMvb->getBool(0xA20,14,5);
    this->DC2CT_IDisChargeState_B1 = this->crrcMvb->getBool(0xA20,14,6);
    this->DC2CT_IChargeState_B1 = this->crrcMvb->getBool(0xA20,14,7);
    this->DC2CT_ICutOfffinish_B1 = this->crrcMvb->getBool(0xA20,15,5);
    this->DC2CT_Ifail_B1 = this->crrcMvb->getBool(0xA20,15,6);
    this->DC2CT_IKM5state_B1 = this->crrcMvb->getBool(0xA20,15,7);
    this->DC2CT_ISuppCapCurrent_U16 = this->crrcMvb->getUnsignedInt(0xA20,0);
    //this->DC2CT_ISoftwareVerL_U8 = this->crrcMvb->getUnsignedChar(0xA20,2);
    //this->DC2CT_ISoftwareVerH_U8 = this->crrcMvb->getUnsignedChar(0xA20,3);
    this->DC2CT_IOverTemp_B1 = this->crrcMvb->getBool(0xA20,4,0);
    this->DC2CT_IKM3fail_B1 = this->crrcMvb->getBool(0xA20,4,1);
    this->DC2CT_ILineVoltHigh_B1 = this->crrcMvb->getBool(0xA21,4,2);
    this->DC2CT_ISuppCapVoltHighHW_B1 = this->crrcMvb->getBool(0xA21,4,3);
    this->DC2CT_ISuppCapVoltHigh_B1 = this->crrcMvb->getBool(0xA21,4,4);
    this->DC2CT_IKM5fail_B1 = this->crrcMvb->getBool(0xA21,4,5);
    this->DC2CT_IKM1fail_B1 = this->crrcMvb->getBool(0xA21,4,6);
    this->DC2CT_IKM2fail_B1 = this->crrcMvb->getBool(0xA21,4,7);
    this->DC2CT_IUCAPHighVolt_B1 = this->crrcMvb->getBool(0xA21,5,0);
    this->DC2CT_IFuse2fail_B1 = this->crrcMvb->getBool(0xA21,5,1);
    this->DC2CT_IFuse1fail_B1 = this->crrcMvb->getBool(0xA21,5,2);
    this->DC2CT_IFanBreakerfail_B1 = this->crrcMvb->getBool(0xA21,5,3);
    this->DC2CT_IL1OverTemp_B1 = this->crrcMvb->getBool(0xA21,5,4);
    this->DC2CT_IFanOverTemp_B1 = this->crrcMvb->getBool(0xA21,5,5);
    this->DC2CT_IKM4fail_B1 = this->crrcMvb->getBool(0xA21,5,6);
    this->DC2CT_IDriverHWfail_B1 = this->crrcMvb->getBool(0xA21,5,7);
    this->DC2CT_IOutPutShort_B1 = this->crrcMvb->getBool(0xA21,6,0);
    this->DC2CT_IGenLineLackVolt_B1 = this->crrcMvb->getBool(0xA21,6,1);
    this->DC2CT_ISupercapOverVoltHW_B1 = this->crrcMvb->getBool(0xA21,6,2);
    this->DC2CT_ISupercapOverVoltSW_B1 = this->crrcMvb->getBool(0xA21,6,3);
    this->DC2CT_IOutPutOverVoltHW_B1 = this->crrcMvb->getBool(0xA21,6,4);
    this->DC2CT_ISupercapOverCurr_B1 = this->crrcMvb->getBool(0xA21,6,5);
    this->DC2CT_ILineOverCurrHW_B1 = this->crrcMvb->getBool(0xA21,6,6);
    this->DC2CT_ILineOverCurr_B1 = this->crrcMvb->getBool(0xA21,6,7);
    this->DC2CT_ILineVoltfail_B1 = this->crrcMvb->getBool(0xA21,7,0);
    this->DC2CT_I24VLackVoit_B1 = this->crrcMvb->getBool(0xA21,7,1);
    this->DC2CT_IVoltSensorInSC_B1 = this->crrcMvb->getBool(0xA21,7,2);
    this->DC2CT_IFanNoCurr_B1 = this->crrcMvb->getBool(0xA21,7,3);
    this->DC2CT_IFanOverCurr_B1 = this->crrcMvb->getBool(0xA21,7,4);
    this->DC2CT_IKM6Fail_B1 = this->crrcMvb->getBool(0xA21,7,5);
    this->DC2CT_ISCOverCurr_B1 = this->crrcMvb->getBool(0xA21,7,6);
    this->DC2CT_ICanCommfail_B1 = this->crrcMvb->getBool(0xA21,7,7);
    this->DC2CT_ISCFire_B1 = this->crrcMvb->getBool(0xA21,8,0);
    this->DC2CT_ISCCommfail_B1 = this->crrcMvb->getBool(0xA21,8,1);
    this->DC2CT_IFusefailSW_B1 = this->crrcMvb->getBool(0xA21,8,2);
    this->DC2CT_ISCStopChargeSW_B1 = this->crrcMvb->getBool(0xA21,8,3);
    this->DC2CT_ISCAlarmSW_B1 = this->crrcMvb->getBool(0xA21,8,4);
    this->DC2CT_IFusefailHW_B1 = this->crrcMvb->getBool(0xA21,8,5);
    this->DC2CT_ISCStopChargeHW_B1 = this->crrcMvb->getBool(0xA21,8,6);
    this->DC2CT_ISCAlarmHW_B1 = this->crrcMvb->getBool(0xA21,8,7);
    this->DC2CT_IGWlifesignal_U8 = this->crrcMvb->getUnsignedChar(0xA21,29);
    this->DC2CT_IGWSWVersion_U8 = this->crrcMvb->getUnsignedChar(0xA21,30);
    this->DC2CT_IGWSWitchPos_U8 = this->crrcMvb->getUnsignedChar(0xA21,31);
    this->DC2CT_ICapaGroupVolt_U16 = this->crrcMvb->getUnsignedInt(0xA21,0);
    this->DC2CT_ISOC_U8 = this->crrcMvb->getUnsignedChar(0xA21,2);
    this->DC2CT_Ilifesignal_U8 = this->crrcMvb->getUnsignedChar(0xA21,3);
    this->DC2CT_ICapaGroupDisCurr_I16 = this->crrcMvb->getSignedInt(0xA21,4);
    this->DC2CT_ICapaGroupfailCode_U8 = this->crrcMvb->getUnsignedChar(0xA21,6);
    this->DC2CT_ICommfail_B1 = this->crrcMvb->getBool(0xA21,7,0);
    this->DC2CT_ISubNodecommfail_B1 = this->crrcMvb->getBool(0xA22,7,1);
    this->DC2CT_IContactorStick_B1 = this->crrcMvb->getBool(0xA22,7,2);
    this->DC2CT_ILeakCurrMajorfail_B1 = this->crrcMvb->getBool(0xA22,7,3);
    this->DC2CT_IMedifail_B1 = this->crrcMvb->getBool(0xA22,7,4);
    this->DC2CT_IMajorfail_B1 = this->crrcMvb->getBool(0xA22,7,5);
    this->DC2CT_IStopDischarge_B1 = this->crrcMvb->getBool(0xA22,7,6);
    this->DC2CT_IStopCharge_B1 = this->crrcMvb->getBool(0xA22,7,7);
    this->DC2CT_IMAXTemp_U8 = this->crrcMvb->getUnsignedChar(0xA22,8);
    this->DC2CT_IMAXTempCode_U8 = this->crrcMvb->getUnsignedChar(0xA22,9);
    this->DC2CT_IMinTemp_U8 = this->crrcMvb->getUnsignedChar(0xA22,10);
    this->DC2CT_IMINTempCode_U8 = this->crrcMvb->getUnsignedChar(0xA22,11);
    this->DC2CT_ILeakCurrMedifail_B1 = this->crrcMvb->getBool(0xA22,12,0);
    this->DC2CT_ITotalVoltLowMedifail_B1 = this->crrcMvb->getBool(0xA22,12,1);
    this->DC2CT_ITotalVoltHighMedifail_B1 = this->crrcMvb->getBool(0xA22,12,2);
    this->DC2CT_ITempSensorfail_B1 = this->crrcMvb->getBool(0xA22,12,3);
    this->DC2CT_ICurrMedifail_B1 = this->crrcMvb->getBool(0xA22,12,4);
    this->DC2CT_ISinVoltHighMedifail_B1 = this->crrcMvb->getBool(0xA22,12,5);
    this->DC2CT_ISinVoltLowMedifail_B1 = this->crrcMvb->getBool(0xA22,12,6);
    this->DC2CT_ITempMedifail_B1 = this->crrcMvb->getBool(0xA22,12,7);
    this->DC2CT_IWaterfail_B1 = this->crrcMvb->getBool(0xA22,13,0);
    this->DC2CT_ITotalVoltLowMajorfail_B1 = this->crrcMvb->getBool(0xA22,13,1);
    this->DC2CT_ITotalVoltHighMajorfail_B1 = this->crrcMvb->getBool(0xA22,13,2);
    this->DC2CT_IFireAlarm_B1 = this->crrcMvb->getBool(0xA22,13,3);
    this->DC2CT_ICurrMajorfail_B1 = this->crrcMvb->getBool(0xA22,13,4);
    this->DC2CT_ISinVoltHighMajorfail_B1 = this->crrcMvb->getBool(0xA22,13,5);
    this->DC2CT_ISinVoltLowMajorfail_B1 = this->crrcMvb->getBool(0xA22,13,6);
    this->DC2CT_ITempMajorfail_B1 = this->crrcMvb->getBool(0xA22,13,7);
    this->DC2CT_IFuseOpen_B1 = this->crrcMvb->getBool(0xA22,14,7);
    this->DC2CT_ISCMinVolt_U16 = this->crrcMvb->getUnsignedInt(0xA22,16);
    this->DC2CT_ISCMinVoltCode_U8 = this->crrcMvb->getUnsignedChar(0xA22,18);
    this->DC2CT_ISCMinVoltModuleCode_U8 = this->crrcMvb->getUnsignedChar(0xA22,19);
    this->DC2CT_ISCSecMinVolt_U16 = this->crrcMvb->getUnsignedInt(0xA22,20);
    this->DC2CT_ISCSecMinVoltCode_U8 = this->crrcMvb->getUnsignedChar(0xA22,22);
    this->DC2CT_ISCSecMinVoltModuleCode_U8 = this->crrcMvb->getUnsignedChar(0xA22,23);
    this->DC2CT_ISCMaxVolt_U16 = this->crrcMvb->getUnsignedInt(0xA22,24);
    this->DC2CT_ISCMaxVoltCode_U8 = this->crrcMvb->getUnsignedChar(0xA22,26);
    this->DC2CT_ISCMaxVoltModuleCode_U8 = this->crrcMvb->getUnsignedChar(0xA22,27);
    this->DC2CT_ISCSecMaxVolt_U16 = this->crrcMvb->getUnsignedInt(0xA22,28);
    this->DC2CT_ISCSecMaxVoltCode_U8 = this->crrcMvb->getUnsignedChar(0xA22,30);
    this->DC2CT_ISCSecMaxVoltModuleCode_U8 = this->crrcMvb->getUnsignedChar(0xA22,31);
}
